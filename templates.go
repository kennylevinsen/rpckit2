// Code generated by go-bindata. DO NOT EDIT. @generated
// sources:
// templates/go/rpckit.go.tmpl
// templates/go/rpckit_boilerplate.go.tmpl
// templates/go/rpckit_client_method.go.tmpl
// templates/go/rpckit_property_to_wiretype.go.tmpl
// templates/go/rpckit_rpccall.go.tmpl
// templates/go/rpckit_serialization.go.tmpl
// templates/go/rpckit_server_method.go.tmpl
package rpckit2

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesGoRpckitGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xd0\x4d\x4e\x03\x31\x0c\x05\xe0\x3d\xa7\xb0\xbc\x6f\x6e\xc0\x0e\x21\x75\xc1\x8f\xe0\x00\x55\x48\x5e\x8b\x45\x26\x09\x8e\x5b\x21\xa2\xb9\x3b\x9a\x96\x1f\xa1\x61\x2a\xb6\xcf\xcf\xfa\xe2\xf4\x4e\x11\x5b\xc9\x20\xd6\x1a\x5e\xc4\x98\x56\xe3\x78\xd1\x3b\x19\x86\x9a\xbc\x7d\x0f\x36\x4f\x45\x12\xf4\x98\xb9\x5d\x71\x36\xd4\xc4\xe4\xe8\xd4\x56\x9f\x77\x20\x77\x03\x7b\x2e\xb1\x4d\x61\x28\xb9\x19\x3d\x42\x0f\xd0\x53\xdc\x3b\xb9\x5b\x3f\x80\xc6\xf1\x57\x4e\x97\x34\x8d\xd6\x57\xd3\xda\x9f\x74\x83\x8a\x4f\xf2\xee\x4d\x4a\xfe\xc1\xa3\x04\x23\xbe\x57\x6c\xe5\x8d\x89\x1f\xf0\xba\x47\x33\x26\x9e\x14\xfe\xc4\xf8\x5a\x90\x62\x63\x72\xeb\x5c\xf7\x46\x0b\xd7\xfd\x97\x68\xb5\xe4\x86\x45\xe3\x6e\x6f\x67\x90\x90\x04\xd9\x36\xc3\xf1\xec\xf9\x27\x22\xc7\x33\xcf\x3b\x40\x17\x37\x67\x7d\xad\x21\xf8\x94\x66\xcd\xd5\x17\xf2\x11\x00\x00\xff\xff\x8a\xae\xf3\x62\xf9\x01\x00\x00")

func templatesGoRpckitGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesGoRpckitGoTmpl,
		"templates/go/rpckit.go.tmpl",
	)
}

func templatesGoRpckitGoTmpl() (*asset, error) {
	bytes, err := templatesGoRpckitGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go/rpckit.go.tmpl", size: 505, mode: os.FileMode(420), modTime: time.Unix(1538739699, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGoRpckit_boilerplateGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x3b\x6b\x6f\xdb\xb8\xb2\x9f\xa5\x5f\x31\x6b\xe0\x14\x52\xa3\x3a\xce\x63\xdb\x1e\xb7\x2e\xb0\x4d\xdb\x7b\x83\xdb\xed\x09\xd2\x9e\xbb\x1f\x8a\x60\x21\x4b\x94\x43\x44\x22\xb5\x7a\x38\x09\xd2\xfc\xf7\x8b\xe1\x90\x14\x25\xcb\x4e\xda\xb3\xbb\xb8\x45\xd1\xda\xe4\x70\x38\xef\x21\x67\xe8\x32\x4e\xae\xe2\x15\x83\xbb\x3b\x98\x9e\xd1\xe7\x4f\x71\xc1\xe0\xfe\xde\xf7\x79\x51\xca\xaa\x81\xc0\xf7\x26\xcb\xdb\x86\xd5\x13\xdf\x9b\x30\x91\xc8\x94\x8b\xd5\xfe\x92\x8b\xb8\xba\x55\x43\x55\x25\x2b\x35\x99\x15\x0d\xfe\xc7\x25\xfe\x5b\xc4\xcd\x25\xfe\x2f\x98\x1a\xac\x6f\x45\x62\xfe\xdf\x8f\x1b\x59\x70\xf5\xb5\xe1\x05\x9b\xf8\xa1\xef\x27\x52\xd4\x6a\xaf\xaa\x4c\xce\xd9\x1f\x2d\xab\x1b\x58\xc0\x81\xfe\x5e\x97\x52\xd4\x0c\x16\x70\xd8\x83\x2d\x2b\xbe\x8e\x1b\xf6\xe5\xb6\x64\xe7\x67\x27\xef\x91\x10\x68\xb9\x68\x9e\x1f\xc3\x02\x90\x80\xe9\xaf\xf1\xcd\xbf\xd5\x40\x6f\x5d\xc1\x9a\x4b\x99\x9e\xc4\x79\x4e\x7b\xd0\xf7\x73\xd6\xb4\x95\xe8\x6f\x52\xb0\xba\x8e\x57\xec\x24\x2e\xe3\x84\x37\xb7\x08\x3e\x3b\x3c\xf6\xfd\x75\x5c\x21\xa2\xf7\x55\xf5\xaf\x35\xab\xb2\x5c\x5e\xc3\x02\x48\x12\xd3\x4f\xec\x3a\x98\x48\x33\xcc\x05\xac\xe3\x8a\x8b\x66\x12\x2a\x66\xce\x2a\x16\x17\xcb\x1c\x99\xf9\x7a\x81\x72\xbd\x7b\x79\x18\xc1\xcb\x59\x04\xcf\x5f\x44\xf0\xe2\xe7\x08\x5e\x1c\x45\xf0\xf2\x38\x82\x99\xf9\x7b\x70\x0f\xfb\xfb\xe7\xd1\x59\x74\x12\xfd\x4f\x74\x1a\x7d\x81\xe9\x14\xd6\xac\xaa\xb9\x14\x70\x80\xb4\x36\xb7\x25\x83\xcf\xac\x5a\xb3\xea\x57\xc5\x8a\x96\x42\x6f\xe6\x24\xe7\x4c\x34\x50\x37\x55\x9b\x34\x70\xe7\x7b\x09\x3c\x3d\x3f\x3b\x39\x91\x42\xb0\xa4\xe1\x52\xf8\xf7\xbe\x9f\xb5\x22\x81\x4f\xec\xda\x5d\x12\x0c\x01\x43\x78\xda\x43\x79\xe7\x7b\x15\xc9\xee\x89\x3b\x7e\x97\xcc\x21\xb9\x47\xac\x8a\x8a\xaa\x4c\x7e\x25\x69\x02\x17\x0d\xab\xb2\x38\x61\xb8\x14\x35\x87\x56\xc5\x82\x02\x9e\x6a\x79\x87\x24\x4b\x35\x79\xfa\x2e\x08\x0d\x3f\x0e\x2e\xd4\xde\x7f\xc7\x22\xcd\x59\xb5\x81\x0f\xe7\x02\x52\xea\xe9\x3b\xbd\x36\x02\x17\x7d\x47\x0c\xe2\xdc\xdf\x87\xa7\xdb\xfe\xe8\x1d\xf5\x4a\x47\x7c\xcb\x36\x03\xfa\x43\x7a\xf4\xbd\x9c\x09\x3d\xc2\x45\xe3\x7b\xa5\xac\xbb\xaf\xb0\xbf\x0f\x99\xac\xa0\x62\x31\xfa\x8f\xef\x7d\x8c\xeb\x86\x2c\x96\x58\x35\xc2\x17\xec\x5a\x53\x16\x24\xc6\xea\xb8\x68\x42\x4b\x3c\xee\x5d\xc0\x7c\x01\x4f\xf4\xc0\x9d\xef\x21\x31\x73\x28\xe2\x2b\x16\x10\x31\x11\x1c\xef\x99\xe5\x61\xe4\x7b\x48\xdb\x1c\x8e\x23\x24\x03\xc1\xa0\x92\xb2\x50\x04\xe5\x4c\xac\x9a\x4b\x28\x2b\x96\xf1\x1b\xdf\x43\xaa\x1f\x05\x78\x6f\x95\x5e\x58\xda\x35\x41\x1f\x2a\x59\xbc\xc5\x88\x11\x14\xf5\x4a\x4b\x27\x84\xc0\x30\x10\x11\x3f\x77\xbe\xc7\x33\xc4\x8a\x50\x21\xbc\x81\x63\x1c\xf2\xf4\x36\xf3\x05\x42\x05\x14\x66\xa6\x6f\xf9\xea\xbd\x48\x79\x2c\xa6\xe8\xcd\x47\x87\x6a\x49\xe8\x7b\x7d\x0c\x0b\x43\x23\xe2\xd9\x94\x91\x91\x52\xbd\x8a\xd4\x37\x25\x12\xb3\x9a\x86\x34\xf3\xf8\xf9\x1e\xff\x31\x1c\x46\x1a\xb3\xaf\xc6\x3b\xd6\x05\xcf\x23\x98\x59\xfe\x7b\x16\x4c\x12\x08\x35\xff\xca\x62\x90\xa2\x62\xba\x6c\xb3\xaf\xf3\x62\x9a\x33\x71\xe1\x7b\x1b\x0c\x9e\xb5\x8d\xe6\x71\x19\x29\xd3\x45\x6e\x11\x18\xf9\xd5\xdb\x2e\xc7\x77\xfc\xad\xe2\x0d\xfb\x5f\x15\x6c\x82\xb5\x36\x7b\x25\xe7\x62\xba\xaa\xe4\x75\xf0\xcf\xd0\xf7\x50\x93\x6b\x14\xd5\xec\xe6\xe5\x4c\x09\x8a\x08\x22\x7a\x60\x01\x48\x6c\xb0\x0e\xe1\x9b\x82\x50\xf3\x39\x13\x7b\x7b\xbe\xe7\xad\xe1\xcd\x9b\x05\xbc\x50\x02\x18\x5f\xe5\x5b\xe8\xed\x04\x7e\x6e\x2a\x2e\x56\xc1\x1a\x5d\x89\x8b\x95\x22\x90\x3e\x7e\xb4\xaa\x47\xad\x10\x36\x97\x27\xe2\x28\x70\x81\xc3\xd0\xb7\xec\xf5\xc6\x7d\x2f\x91\xe5\x6d\xe0\x90\x39\xbf\x88\xc0\x52\x08\x7b\x0b\x70\xe1\x77\xd0\x7b\x74\xf8\x96\x1b\x79\x1e\x1d\xba\xf2\x3c\x0e\xad\xfe\x3e\xf2\xa6\xc9\xd9\x86\x0a\x77\x6d\x7f\xbc\x63\xcf\xe7\xc7\xdd\x9e\x7d\x1d\xbe\xdc\xbd\xe7\xf3\xe3\x9d\x7b\xbe\x1c\xdf\x53\x61\x16\x8c\xa5\x2c\x75\x7d\x93\x74\xa9\xc7\xdf\x90\xab\x20\x72\x35\xef\xed\xef\xc3\x27\xd9\x00\x13\xb2\x5d\x5d\x42\x5d\x62\xf8\x8d\xc5\xed\xf5\x25\xab\x58\x04\xd7\x0c\x70\x21\x34\x12\xe2\x3c\x97\x49\xdc\xb0\x29\xc5\x29\xe5\x04\xf1\x15\xfb\x9c\xf3\x84\x05\x87\x4f\x93\xb8\x34\x68\xf7\x80\x36\x43\xcf\x56\xea\x5b\xb6\x59\xa4\x3d\x66\xa6\x5d\x26\x34\x26\x8b\x56\xd7\x66\x68\x8c\xa3\x3c\x9d\xb3\x38\xd5\xa6\x16\x82\xb6\x8d\x88\x62\xad\xa2\x7f\xad\xbe\x90\x47\x22\xac\xb6\xb1\x50\x71\x8e\x33\x3f\x2d\xd0\xbd\xb5\x8b\x74\xd1\x5a\xa5\x79\xdf\x86\x86\xc9\x24\xa2\x81\x7b\x7f\x10\xba\xd6\x68\x9a\x4a\x8a\xa5\xac\xf7\xf4\xdc\x1b\x12\xea\x08\x56\x2e\xa7\xef\xff\xf5\xa1\x8f\xd8\x8c\xdd\xfb\xca\x45\xba\xf0\xa1\x70\xc2\xbc\x87\xfb\x02\xf5\x8c\xc3\x7b\x26\x0e\xfa\x36\x60\x10\xfb\x28\x85\x30\x42\xae\xb6\x8b\xcc\x88\x01\x02\x93\x36\x1d\x91\xc5\x15\xdc\x98\x54\xac\xbe\xd5\xea\x1b\x45\x15\x8e\xe4\xcd\x5e\xc1\x2b\xe0\x7b\x7b\x8a\x41\xcb\xfc\x41\x8f\xef\x6d\x8c\x1b\x62\x67\x1d\xe3\x2a\x0a\x2f\x07\x7c\x5f\x28\xd9\x21\xde\x3d\xda\x64\x09\xaf\xbb\x70\x86\x03\x1c\xde\xc0\x3f\xe1\xdb\x37\x08\x38\x2c\x16\xf0\x4f\x78\xf2\x04\x96\xf0\x06\x0e\xc8\x72\x87\x14\x38\xa7\x38\x35\xdb\xd1\x31\x98\x71\x73\xc2\x0d\x7c\xd3\xa2\x08\x96\xe1\xeb\xd7\x35\xc9\x95\x60\x6e\xe0\xdb\xc2\x4e\x3e\x99\xdd\xbc\xc8\x42\x78\xfd\x1a\x6a\xdf\xf3\x94\x7a\x5e\xec\xb4\xda\x53\x92\xff\x86\xf8\x6f\xb6\x5a\xac\x26\x89\x36\xbc\x09\xc9\x22\xb7\xe2\x7f\x2b\x65\x8e\x1b\x2c\xa5\xcc\x7f\xd4\x23\xf4\x8e\x59\x9c\xd7\xac\x73\x00\x3d\xba\x46\xa1\x1f\x3c\x60\x68\x14\x56\xb5\x9d\x1d\x1d\xba\x84\x58\xbb\x39\xfe\x0e\x7f\x99\xf5\xdd\xe5\x06\xf9\x18\x0b\x94\x83\xc8\x8c\x19\x5f\x6f\x76\x11\x3a\x1e\x74\x6c\xb9\xb9\x79\x80\x11\x8a\xd5\xa3\x0e\x63\x19\x79\xf9\x17\x31\xe2\x84\xfb\x8e\x91\x97\x3d\x46\x5e\x3e\x9a\x91\x0f\xb9\x8c\x15\x23\x19\x7e\xe8\xab\xa4\x1d\xd8\x86\xd6\xde\x0e\xd3\x98\x59\xb3\xe8\x0e\x8a\x78\x23\xfb\x40\xc8\xb3\x4a\x16\x4b\xde\xd4\x41\xfb\x50\x44\x7a\x27\xdb\x65\xce\x2c\x5d\x7d\x09\x0f\xe9\xd2\xca\xf8\x51\xba\x9e\x1f\x3f\x9e\xae\x53\x25\xfe\x31\x47\xdd\x4a\x54\xcf\x4f\xdb\xce\x4f\xd5\x0d\xe3\x9a\x57\xea\x26\x6b\xef\x6e\xf6\xba\x6a\x66\xc8\x21\xc1\xfe\xb1\x2b\x16\x30\xeb\xa0\x9e\x1f\x2f\xb9\x03\xe4\x42\x1d\x74\x50\x74\xec\x79\xc7\x72\x5e\xf0\x86\xa5\x2e\xd4\x61\x07\x75\x74\xb8\x15\xd7\xcf\x78\xf1\x24\xc9\x5c\xdb\xf1\x10\x6c\xca\xa5\x94\xa3\x0e\x77\xd7\xbc\x49\x2e\xe1\x5a\xdd\x39\xe3\xba\xe3\x94\xf8\x99\x3b\x39\xaf\x3f\x33\x19\xc0\x2b\xce\xc6\xc0\xd5\xc4\x10\x7a\xc0\xe1\xd8\xba\x01\xc8\x10\x83\xe2\x7e\x6c\x9d\x9a\x98\xf8\x5e\xca\xb2\xb8\xcd\x15\x48\x19\x0b\x9e\x04\x93\x56\x5c\x09\x79\x2d\x14\x0a\xd4\x2a\x5e\xfa\x77\x84\xfa\xb3\xb7\x9f\xaf\x78\x19\x34\xf1\xca\x1e\xf5\x94\x19\x99\x6c\x8b\x66\xa4\x6f\xc2\x46\x8a\x9a\x04\xb5\xe6\x09\x04\xc1\x01\x66\x96\xa3\x10\x9e\xc1\x41\x18\xee\x10\xf1\xef\x64\x94\x9b\xc1\x7d\x5c\xc4\x03\x70\x6b\xc2\x0f\x89\x78\xb0\xce\x98\xc3\x36\xc9\x0e\xc0\x6d\x58\xe9\x92\xc9\xd6\x54\xa6\x0e\xca\x67\x6f\xbf\xc4\xab\x20\xe3\x2c\x4f\x3f\xb5\xc5\x92\x55\xf6\xb6\x6f\x4d\xb5\xb3\xcd\xbb\xe1\x85\xa2\xb7\x90\xc4\x68\x93\xba\x5d\x16\xee\xdc\x5e\x33\x38\x46\xc1\x3a\xce\x5b\xe6\xde\x72\x78\xa6\xc7\x7e\x5a\xc0\x64\xa2\x53\xc1\x38\x1b\xd1\x36\x19\x87\xdd\x22\x73\x91\x42\x94\xdb\xcd\x4c\xe3\x57\x49\x7f\x3b\x95\x78\x16\xd8\xa0\x51\x65\xf7\x47\x92\x49\x12\x75\xa8\xd3\x22\x3e\x78\x90\x32\x8a\xa3\xdb\x49\xeb\xae\x40\x2e\x6d\xb3\x47\xd2\xa5\x0c\xda\x21\x8b\x0c\x59\xeb\x98\x44\xf7\x18\x0a\xff\x32\xfa\xb6\xc9\xed\xfb\x28\xa4\xd4\xbd\x9d\x46\x9d\xd1\x7f\x98\x4a\xe5\xaf\x0e\x91\xe4\xa7\x6e\x3e\x57\x39\xf3\x91\xd4\xea\x8c\xfe\x00\xb9\x7f\xba\xd2\xdd\x34\x3f\x42\xee\x8e\x22\x20\x25\x68\x53\x62\xb6\x25\x45\x27\x45\xff\x17\x13\xac\xe2\x09\x9d\xe9\xf0\x8f\x03\xac\xb2\xf3\x17\x5e\x30\xd9\x36\x5b\x00\x0e\x7c\xef\xac\x92\x8d\x4c\x64\x6e\x21\x7a\x00\x87\xbe\xf7\x4b\x59\xe6\x3c\x89\x1b\x2e\x05\xc1\xf4\x00\x8e\x6c\x1d\xd8\x56\xc2\x7b\x55\x51\x9d\x45\x54\x31\xb5\x5b\xe8\x16\x54\x69\x51\x57\xdf\xe4\x69\x9f\x0a\x8d\x43\x07\xb4\x4e\xc1\x0c\x9e\x9a\xd5\x21\x0c\xf0\x3b\xa5\x61\x36\xe5\xe9\x96\x45\xea\xbf\xde\x91\xc1\xae\xe9\xd7\x46\xfb\xcb\xfa\xb5\x61\x67\xd9\x48\x5b\x60\x3b\x8a\x6d\xb5\x67\x27\x5b\x50\x04\x38\x88\xf4\xc1\x0d\x39\x09\x43\x67\x56\x07\x62\x3c\x30\x13\xc1\xa1\x5b\x20\xdc\xbe\xf5\x3b\xb6\x75\x6b\x14\x3d\xf5\x18\xcc\xd1\xab\x3b\x0a\x98\x91\xee\xd4\xa0\x86\x42\xf5\x6f\x46\x05\x65\xbc\x81\xd1\xc1\xd7\x81\xde\x76\x02\x30\x67\x0b\x44\x88\x0e\xa6\x52\xb5\x0e\x40\x07\xc3\xbc\x78\x77\x07\x0d\x2b\xca\x3c\x6e\x18\x4c\xaa\x32\xb9\xe2\xcd\xef\x65\x25\x4b\x56\x35\xb7\xbf\x37\xf2\x77\x73\xf2\x99\xae\xe4\xb4\x29\xca\x7c\x02\x93\x53\xd1\x4c\xe0\xfe\x3e\xc4\x84\xaf\x8e\x35\x3c\x05\x5d\x44\xf0\x3c\x9e\xf6\xc9\x3a\xd5\x34\x79\x28\x66\x58\x38\xc6\x14\x70\x2a\x0c\x39\xd4\x1d\xfe\x09\xd4\x91\xf6\x3a\x02\xb5\x0e\xb7\x9c\x63\x8c\x38\xed\xd1\xcf\x39\x1d\x43\x77\xe9\xa0\x1b\x9c\x23\x7e\x57\x8d\x06\x69\x77\xfa\x0b\x7b\x70\xf7\x7e\xff\x13\xfd\xab\x91\x2f\x46\x90\x3b\xc6\xd6\xc1\x8f\x9c\x9f\x78\x6d\xa4\x19\xa0\x10\x6c\x20\x0b\x55\xfe\x77\x3c\x48\xcf\x2e\x16\xdb\x7c\x69\x57\xb0\xa4\x88\xf2\x8e\xd7\x09\x75\x8c\x58\x6a\xfa\x34\x48\xc4\x46\x37\x89\x04\x6d\x90\x3b\x51\xac\x03\x71\xa2\x52\x7d\x2b\x92\xe9\xf9\x6f\xbf\xb6\x0d\xbb\xf1\x3d\xbb\x03\x32\x8c\x3c\xd0\x90\x95\xa4\x60\xcd\x14\xd1\xf8\x9e\x14\x1d\x41\x63\xb4\xf9\xde\x25\x7d\xa0\x9e\x4d\x11\x97\x5f\x49\x36\x17\xfd\x5e\x93\xef\x5d\xc7\xbc\xe1\x62\x85\x63\xb5\x0b\x97\x5c\xc6\xc2\x7a\xb2\xef\x09\x76\xd3\x9c\xbe\xd3\x74\x50\x8d\xc3\xf7\x1a\xca\x02\xda\x23\x79\xc1\xa6\xef\xda\x2a\x1e\x36\xdf\x7a\xbc\x07\x8a\x21\xc3\x48\x08\xc1\x50\x7a\x56\x72\x8e\xfe\x86\x48\x7e\xe3\xcd\xa5\xce\x40\x0a\x5f\x04\x47\x33\x78\x4a\x14\x7c\x66\x89\x14\x69\xb8\x95\x80\xe1\x5a\x4b\x4b\x04\x86\x9d\x1e\x27\x0f\x91\x98\xa8\xbe\x4c\x0f\x42\x05\x1d\xa3\x90\xb9\x92\x4d\xd5\xb2\x48\x8f\xce\xad\x3a\x15\xe9\xbe\x67\x55\x35\xd7\xba\xba\x62\xc1\x56\x85\xa9\xce\x8e\xab\xb3\xf9\xc6\x82\x9e\xe6\x14\xbc\x66\x6c\xde\x29\x4a\xb6\x4d\x44\x45\x03\x9e\xc1\xef\xf6\x82\x9f\x4c\x91\x26\x4a\x04\x81\xd3\xdd\x0d\x5f\x6d\x29\x3f\xa8\x8e\xd1\x13\x93\x06\xee\x78\x3a\x07\xf7\xec\xa0\xcb\x08\x73\xc8\x8a\x66\xfa\xb9\xc4\x08\x9d\x05\x93\x44\xb6\x79\x0a\x42\x36\x70\x8d\x1b\x41\xa9\x77\x99\xc3\x3f\xd6\x54\x7f\x0e\xef\x89\xb8\x95\x84\x64\x5a\xb1\x38\xfd\x28\x65\xe9\x94\x1c\x12\x5b\xcc\xd0\xb9\x68\xb3\xa7\x7b\xce\x0a\xd9\xb0\x5f\xd2\x14\x53\x31\xea\x18\x3f\x3a\x36\xa5\x59\x75\xc1\xba\xd4\xb6\x89\xae\x23\xc2\x5c\x66\x03\x25\x85\x84\xf1\x35\x4b\x6d\x17\x9c\x9c\xd6\x93\x59\x16\x41\xc1\x05\x86\x45\xd5\x2e\x5d\xc0\x2c\x82\xc3\x9f\x9f\xeb\x9e\xc1\xa2\xdf\xdc\x9c\x45\xf0\xf3\xc1\x61\xe8\x7b\xa1\xef\x7b\xfb\xfb\x70\xc5\xf3\x1c\x96\x71\x0a\x89\xa5\xa0\x56\xd7\x73\x13\x74\x42\x53\x90\x46\xa0\xf9\x02\x2a\x96\xc8\x35\xab\x82\xf0\x95\x1a\x71\xf4\xe4\x25\x53\x26\xd2\xe0\x7b\x55\xd4\x0a\x32\xca\x54\xa7\x70\x2e\x1c\x09\x68\x3d\x2d\xe3\x34\xbc\x0f\x75\x0f\x31\x40\xd2\x33\x3a\x67\x20\x0b\x08\x0d\x59\x25\x0b\x68\x2e\x99\xc3\x07\x91\x2d\xb3\x4c\xf7\x37\x03\xdb\x80\xf1\x6c\x13\xe4\xeb\x7c\x76\x81\x03\x08\xa5\x4e\x9b\xca\x16\x70\x5d\x56\x31\xa6\xec\x34\x2e\x69\xe1\x33\x8b\xe3\x15\x4d\xbe\xb6\x62\x57\x38\xf7\xf7\x95\x9d\xf5\xbb\x3a\xf8\x3d\xc5\x59\xc1\xae\xdf\x52\x07\x47\xb5\x5e\x0c\x69\x7b\x63\x98\x46\x51\xb5\x35\x9e\xf0\x96\x6c\xc5\x85\xc0\x4f\x32\x43\x4c\x19\xab\x5e\x99\x25\xa9\xba\x1c\xe8\x51\x30\x3d\x6c\x35\xab\x77\xdf\x6c\x1f\xe9\xe6\x91\xde\x3e\xb4\xa5\x7a\xd5\x43\xa2\x55\x91\x92\x93\xcc\xb2\xb9\xea\x20\x69\xd9\xd1\xdc\xd7\xb9\x91\xc9\x33\x99\x65\x63\x92\x2c\x86\x0e\x8f\xfb\xe0\x8a\xaf\x66\xe5\xdc\xd0\xa1\xd0\x77\x9a\x99\xc1\xdc\x4a\x7c\xaf\xb8\x20\xad\x0c\xf3\xb8\xb5\x3a\xc1\xf3\xb0\xeb\x31\xe0\xee\xc0\xf0\x0e\xbe\x59\xcd\xfc\x41\x33\x25\xe3\xd4\x8f\x10\xc8\xdc\x3a\x53\x1b\x35\x5a\x15\x5c\x06\x44\xa1\x48\x8c\xe9\xa2\xce\x92\x4b\x96\x5c\xa9\xa3\x67\x59\xb1\x22\x5e\xe6\x4c\xdb\xc6\x4f\x1b\xfe\x4e\xa6\xa1\xdb\xf6\x9d\x4a\x8c\x71\xbb\x21\x54\xc3\x2a\xaf\xbd\x6d\x58\x3d\x7d\xff\x47\x1b\xe7\x2e\x48\xa7\x54\x34\xc2\xe1\xfa\x0b\x8b\x41\xa9\x73\x6f\x73\x07\x3d\xbb\x41\xe4\x42\xe5\x1f\x9a\xd5\x1a\x30\x98\xc6\xc4\xde\xbb\xba\x59\xb9\x4f\x52\x4e\x31\x5b\xa3\x07\x76\x53\xd2\x59\x85\xce\xa5\x87\x36\x8c\x4f\xee\x3b\x4a\xb4\x88\x8d\x05\x0f\xb6\x5f\x56\x2c\xbe\xf2\xed\xac\x52\x04\x2a\xa0\x8c\xab\xda\xbe\x51\xa9\x55\x8f\xad\x5e\x99\x47\x0b\xaa\x10\x3d\x7c\x99\xd1\xf7\x06\x9e\x41\x51\xaf\x7a\xf6\xe5\xc8\x8c\x1e\x3e\x20\xef\x2b\xd9\x98\xc7\x29\x45\xbd\x22\x47\x73\x09\xb4\xf4\xdd\x9b\x97\x12\x3b\x32\x44\x1f\x99\x73\x09\xc2\x9b\x17\x7d\xc6\x63\x67\x57\x4c\xaf\x57\x0f\xf6\xa5\xbe\x43\x3d\x5d\x52\x55\xa1\xd7\xbc\xae\x51\xa7\x4f\x99\x01\x17\x89\x2c\xd0\x49\xf4\x04\x29\xc9\x28\x48\x75\x64\xe9\xd6\xe4\x90\x6a\xcb\xaf\xdd\x03\xb3\xb9\xba\xb1\xe4\xf9\xe9\xbb\x1d\x7c\x8c\x30\xf2\x1f\x70\x42\xdb\x91\x73\x13\x21\x6a\x68\xb2\xe1\xc5\x9e\x57\x6a\x84\x7f\x23\x75\xdd\x96\x8f\xa2\x50\x1f\xf5\x22\xc8\x64\x2b\x52\x8a\xc0\xe6\xf8\xf7\xb5\xc3\xa5\x03\xeb\x4f\x04\xf5\x9d\x24\x0e\x12\x39\x55\xf0\x0d\xee\x39\xfc\x23\x9d\x44\x0e\xd9\x9b\xd1\xd0\xf3\xcc\x5b\xb3\xbf\x4d\x8a\xf6\x71\xdb\xc3\x32\x54\x56\x5b\xb7\x79\x83\x74\x69\xd1\x4d\x87\x8f\xe4\x22\xd0\xfe\xcc\x33\xd0\xd0\x2e\xa1\x15\x2b\xf3\x5b\x5c\xef\xbc\x4e\x1b\x3c\x8d\x0c\x2d\x5c\xaf\x8e\xe9\x3e\xad\xdc\x02\x42\xf6\xba\x65\x92\x88\x99\xea\x5a\x8f\x06\x32\x43\xba\x76\xa3\x56\x85\x24\xd0\x1a\x25\x6a\x07\x14\xf7\x3a\x28\x39\x8e\x49\xe4\xfc\xff\x70\x4d\xd2\xd4\xa8\xda\x92\xe9\xf9\x47\x99\x5c\x29\x32\x92\xcb\x9e\x0b\xb8\x17\x9a\xaf\x84\xf5\x82\x56\xfc\x5b\xe4\x66\xcd\x9f\xe3\x10\x96\x4e\xfd\x08\xd7\x64\x4b\x95\xef\x8d\xb7\x20\x09\xfa\xc0\xa0\xd5\x39\xca\xd0\x25\xbc\x7e\x86\x42\xee\xb4\xb2\x33\x43\xc4\xc9\x1f\x2d\xaf\x18\x72\xf9\x39\x97\xbd\x26\x7b\xff\x4a\x39\x35\x72\xa2\x23\x7f\x32\xb5\x52\x50\xd7\x83\x13\x75\x3e\xe1\x19\xc4\xe2\x16\xea\x5c\x36\x35\xb0\x1b\x5e\x37\xf6\x05\x62\x5f\xa0\xea\x34\xe2\x3e\x1f\x3e\x3a\x1c\x74\x90\x1f\x71\xec\x9a\x08\x69\xd4\x4d\x3b\xc6\xeb\x98\xe7\xb1\x4a\xf7\x94\x3f\xf6\xf7\xe1\x03\x17\x29\xc4\x0a\x80\xee\x48\xa2\x2b\x15\xc4\x57\x4c\xa0\xb2\xe9\x28\x82\xc2\xa6\x21\xa4\x44\xc0\x02\xe8\x11\x35\xde\xd2\xf4\x93\x86\x27\xc9\x94\x8a\x0e\x11\x1c\x84\xd4\x5b\xa3\x15\x1b\x06\xa3\x8b\x65\x22\xbc\xb0\x94\x7c\x89\xaf\x98\xba\x79\x10\x2d\x5b\x17\xc0\x82\xde\xb9\x68\x59\xd8\x89\x41\xb3\x7c\x44\x97\xcb\x58\xa4\x52\x58\x5d\x6a\xd9\x38\x2f\xdc\x76\x6a\x91\x67\x46\x9a\x6f\xc6\x54\xa3\xdb\xaf\x71\xd3\xb0\xa2\x6c\xf4\xbb\x33\xda\x11\xb8\x58\xc7\x39\x37\xce\x47\x1d\x59\xf5\xda\x45\x5e\xed\x72\x26\xf4\x1e\x79\xf5\x20\x76\x75\xf5\xc1\x45\x4a\x72\x84\x5d\x35\x2d\xdc\x90\xb1\x0b\x41\x5b\xb3\x74\x03\x41\xca\x72\xd6\xb0\x81\x5d\x5a\xdf\xda\x7d\xef\xce\x59\x5c\xb3\xbf\x51\xce\x7a\xc7\xbf\x48\xce\x06\xfb\x76\x39\x2f\x76\xcb\xd9\x20\x68\xc5\xa8\xa4\x93\x5c\xd6\xf4\x74\xf5\xc7\x65\x8e\x20\x01\xae\xfa\x20\xab\x73\x95\x2a\xe9\x6d\x95\x73\xd6\xb1\x8f\xd0\x87\xaf\xd2\x71\xed\x2f\xd5\xaa\x76\x9e\xa4\x3b\x61\xae\x7b\x33\xdd\x0f\x78\xfd\xb4\x95\x4c\x37\x22\xe5\xee\x17\x30\xaa\x0a\x65\x9f\xc1\x14\x0f\x66\xf6\x62\x24\xa7\xe3\x5e\x1b\x53\x36\x97\xf7\x87\x9d\xd3\xd3\x38\x32\x9c\xb0\x24\xab\x7a\x05\x49\xc5\xc9\xf2\xc5\x66\x4d\x2d\x99\x8e\x47\x95\x70\x93\xd9\xef\xaf\xe7\x60\xa8\x46\xfb\x51\x3f\x79\x61\xee\x19\x0b\xe2\x6a\xd5\x16\x4c\x34\xf5\x66\x01\x0e\xad\xb9\x67\x09\xdf\x49\xa7\x3e\xc1\x14\xa1\x8d\xcc\x35\x6b\xda\x92\x8a\x42\x6a\x6f\x91\xaa\x82\x64\xe5\x63\x3a\xd5\x6f\x69\x83\x5e\x09\x93\xe2\x7f\xe7\xe6\xe3\x9e\x87\x69\xe1\x12\x27\x3b\xef\xa7\x64\x29\x45\xc6\x57\x6d\xa5\xf7\x33\x35\x5e\xdc\x37\xc9\x59\x2c\xda\x92\xea\xd8\x4a\x4f\xaa\xf2\xfb\x89\x5d\x7f\xc1\x81\x20\x99\x6a\xe8\x70\xa4\xf8\xa6\xd6\x4c\x3f\x37\x54\x97\xf4\x92\xe9\x78\xa4\x0a\x4d\x6d\x4c\xb1\x8e\xcc\x1a\xce\xe5\x9a\x55\xa8\x10\x1c\x90\xcd\x25\xab\x6a\x9e\x32\xdf\x43\xa0\xf7\xc6\x0f\xac\xf0\x78\x06\x66\x62\xbb\x07\x68\x08\x2b\x6a\x14\x93\x3a\xd6\xe0\x16\xea\x10\x89\xe8\x73\xa6\x7f\x2f\xa3\x0e\x90\xf5\x0a\x77\x7a\xfd\x2c\xb9\x9c\xdb\x93\xf5\x17\xd5\x2e\xf9\xee\x53\xe4\x89\x0a\x3d\x61\xff\xe9\xeb\x0f\x59\x2b\x95\x75\xae\x2f\x79\xce\x20\x65\xf4\x13\xad\xde\x8d\xb6\x6f\xa8\xea\xce\xa2\xb7\xec\x73\xa0\xca\x06\x2a\xc1\x2b\x6e\x5f\x3f\x23\xad\x9d\xcc\x1f\xf2\x28\xb7\xbf\xdd\x9d\x81\x5c\xa7\x41\x4c\x29\xc8\xb6\x99\x3c\x54\x18\x20\x25\xf6\x4a\x02\xb6\xa9\x7d\xe7\x7b\xaa\x18\x64\xe4\xac\x7f\x65\xb1\xab\x2c\xaf\xe0\xc7\x82\x47\x27\x7f\xf3\xf3\xa5\xff\x40\xec\xd7\x95\x72\x31\x23\xf5\x61\x64\x18\x6d\x08\x6f\xb2\xae\x49\xa2\x34\x6d\x2b\x82\x3b\x16\x20\x4c\xaf\x7f\xf6\x40\x86\x57\x09\x7e\xda\xf5\xcd\x48\x12\xdd\x77\xfd\xea\xc7\x8e\x3a\x42\xd2\x57\x0f\xb7\x93\x46\x96\x3d\xac\x9f\xf7\x7a\x6d\xfa\xbc\xe8\x79\x69\x90\x90\x3c\x1e\x51\x1a\xaa\x59\xa3\xdb\x37\xc1\x48\x0e\xd5\x97\xd8\xc1\xaf\xc0\x34\xe7\x63\xc5\x01\xb0\x17\xdf\xee\xa7\x4a\xb6\x84\x2c\xe8\x27\x0f\xdd\xcf\x74\xf6\xf7\xe1\x34\x53\x21\x40\xfd\x00\x2a\x8b\x39\x1e\x03\x56\x7c\xcd\x20\x06\xba\xee\x28\xc5\x4f\xc7\x3b\x0c\xb6\xb5\xd0\x93\x0a\x9d\x4c\x74\x1d\xb3\xaa\xbe\x48\xf9\x31\xae\x56\xcc\xe9\x06\x74\xaf\x51\x9d\x46\x87\xd8\xa9\x7c\x62\xea\x8c\x5a\xb4\xe6\x57\x92\x41\xe7\xd1\xdd\xa9\xa3\xe7\x4c\x81\x31\x96\xa8\xf7\xee\xcb\xe9\x0e\x77\x28\x88\x2d\xbc\x9a\x54\xf6\x91\x48\x17\xcf\xe6\x0b\x50\xb5\x04\xf3\x92\xa1\x5e\x6d\xfa\xd9\x8f\x3a\x57\x77\x75\x56\x11\x8d\xe9\x48\xe5\x3a\x56\x64\xea\xb4\xf7\xae\x0f\x9b\xd1\xc1\xcf\xb4\xc8\xae\xef\xfd\xff\x0b\x00\x00\xff\xff\x99\x76\x19\xaf\xf3\x3a\x00\x00")

func templatesGoRpckit_boilerplateGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesGoRpckit_boilerplateGoTmpl,
		"templates/go/rpckit_boilerplate.go.tmpl",
	)
}

func templatesGoRpckit_boilerplateGoTmpl() (*asset, error) {
	bytes, err := templatesGoRpckit_boilerplateGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go/rpckit_boilerplate.go.tmpl", size: 15091, mode: os.FileMode(436), modTime: time.Unix(1538739720, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGoRpckit_client_methodGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x94\x51\x6b\xdb\x30\x10\xc7\xdf\xf3\x29\xae\x81\x14\x7b\xd3\x0c\x83\xb1\x07\x97\x3c\xa5\xa1\xf4\x61\x5b\x48\xfb\x38\x18\x9e\x74\x4e\xc4\x14\xc9\x3b\xc9\xd9\x86\xf1\x77\x1f\x92\xe5\x44\x69\x4a\x1b\xa8\x9f\xac\xd3\xff\xce\x77\xbf\xbb\x73\xdd\x6a\x0e\x19\x87\x77\x0f\x48\x7b\xa4\x85\x92\xa8\x5d\x0e\x5d\x07\xc5\xd7\x6a\x87\xd0\xf7\x99\x3f\x50\xa5\x37\x08\xc5\xbd\x6e\x5a\x07\x7d\x3f\x81\xf8\xfc\x48\x84\xc1\xe9\xb1\xb8\x33\x8f\xff\x1a\x7f\x66\x41\xd5\x75\x1f\x00\xb5\x18\x9d\x72\x48\xe3\x7d\x6b\xdd\x5b\x03\xfa\x07\x89\x60\xbd\x5a\x2c\x89\x0c\xb1\xf8\x99\x6e\x12\x5e\x08\x6d\xab\x9c\x0f\x70\x7f\xcb\x60\x67\x37\x2c\xa8\xcb\x39\xf0\x82\x17\xbc\x52\x2a\x73\xd4\x22\x83\x8f\x0c\x5a\xa9\xdd\xe7\x4f\xd9\x40\xe2\x0b\xba\xad\x11\x49\x36\x39\x83\x6b\x1b\xae\xd6\xf8\xbb\x45\xeb\xd2\x54\xbb\x4b\x21\x95\x27\x27\x76\xd0\x3c\xa9\xaa\xcf\x87\xf4\x65\x1d\xd2\xbd\x9a\x83\x96\x0a\xba\x83\x5c\xd6\x40\x0d\x5f\x12\x31\x30\xbf\x7c\x35\x48\x54\x64\x23\x83\xfc\xc6\x5b\x8f\xea\x91\xd1\x3c\x3a\x1d\x2e\x7a\x40\x65\xf1\x59\xe5\xf5\x20\x35\xd4\x49\x51\xc2\x1d\x6a\x24\x39\x18\x02\x41\x43\x25\xd4\x3b\x57\x3c\x34\x24\xb5\xab\xb3\xa9\x47\x09\x75\x25\x15\x8a\x12\x66\xef\xf7\xdf\xf5\x34\x08\x8b\xe0\x93\xe5\xf9\x91\xc7\xf1\x8d\xd0\xb5\xa4\x87\x8a\x87\x82\xed\x1f\xe9\xf8\xf6\xa4\x6d\x31\x3d\x5e\x59\x7c\xad\x45\xe5\x21\xf2\xbe\x22\x20\x18\xfb\x65\x1b\xa3\x2d\xa6\xe4\x53\x92\x02\xb9\x11\xb8\x1c\xc6\x82\x8a\xf5\x6a\x71\x1b\x2c\xd9\xce\x6e\xf2\x9b\xe4\xfa\xac\x0d\x6f\xc0\x65\x5a\x25\x40\x1b\x17\xc3\xc7\x8a\x4b\x98\xed\xa7\xec\xf8\xc9\x84\xda\x13\x5e\xa7\x20\x2f\x5e\x29\x5f\xe0\xb3\x1c\xe2\x00\x46\x8b\xc0\xba\xf2\xe9\x9c\xf0\x94\x76\x45\x72\x5f\x39\x84\x9f\xc6\xa8\x74\xfb\x58\x72\x37\x6c\xd6\xb6\xd2\x42\x61\xb4\x8d\x0d\xc8\xce\xb6\x31\x4f\xfb\x70\x75\x0c\xf2\x3a\xe2\x15\x19\x67\xb8\x51\x2f\x30\x6e\x35\xfe\x6d\x90\x3b\x14\x11\x1c\x38\xff\x23\xa9\x0d\x41\x98\xd6\x70\x9a\xf9\x71\x15\xd3\x0b\xb6\x3f\x4d\xfe\x6c\x9a\xfb\xf1\x77\x13\x1a\xd4\x4f\xfe\x07\x00\x00\xff\xff\xa6\xec\x98\x90\x58\x05\x00\x00")

func templatesGoRpckit_client_methodGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesGoRpckit_client_methodGoTmpl,
		"templates/go/rpckit_client_method.go.tmpl",
	)
}

func templatesGoRpckit_client_methodGoTmpl() (*asset, error) {
	bytes, err := templatesGoRpckit_client_methodGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go/rpckit_client_method.go.tmpl", size: 1368, mode: os.FileMode(436), modTime: time.Unix(1538738884, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGoRpckit_property_to_wiretypeGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xcd\xc1\x0a\x82\x40\x10\xc6\xf1\xbb\x4f\x31\xec\xdd\x0e\x25\x3e\x40\x48\x10\x74\x2b\xba\x2b\x4e\x36\xb4\xcd\x6c\xd3\x88\xc8\xb2\xef\x1e\xd2\x21\x04\x8b\xee\xbf\xef\xff\xc5\x98\x03\x5d\x00\x1f\xb0\x02\x77\x34\x25\xee\x1c\xe4\x29\x0d\xa4\x78\x1a\x03\x1e\x90\x3b\xbb\x56\xe8\xe9\x4e\x86\x6d\x36\x79\xf4\x4f\xfc\x8c\xb6\x22\x7e\x36\x39\xd7\x4a\x6c\x0b\x72\xcf\x56\x16\x33\x5a\x16\x0d\x7d\x91\xff\x25\x77\x5e\xea\x39\xdd\xac\x97\x93\x95\xf4\x8d\xc7\x5f\xef\x79\x4a\x31\x02\xaa\x8a\x82\xeb\xf9\xc6\x32\x30\x04\x95\x80\x6a\x23\xd8\x18\xd0\x41\x4a\x6f\xcf\xed\xc4\xb3\x57\x00\x00\x00\xff\xff\x94\xf7\xd7\x4d\x3e\x01\x00\x00")

func templatesGoRpckit_property_to_wiretypeGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesGoRpckit_property_to_wiretypeGoTmpl,
		"templates/go/rpckit_property_to_wiretype.go.tmpl",
	)
}

func templatesGoRpckit_property_to_wiretypeGoTmpl() (*asset, error) {
	bytes, err := templatesGoRpckit_property_to_wiretypeGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go/rpckit_property_to_wiretype.go.tmpl", size: 318, mode: os.FileMode(436), modTime: time.Unix(1538739817, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGoRpckit_rpccallGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x93\xcd\x8e\xd3\x30\x10\xc7\xef\x7d\x8a\xa1\xd2\x22\x67\x15\x72\x42\x1c\xb2\xea\x01\xb5\x08\x7a\x28\x54\xdd\x07\x40\xc6\x99\x74\xa3\x75\xec\x30\xb6\xbb\x07\xcb\xef\x8e\xec\xa4\xc5\x29\x5d\x10\xbe\xc4\x99\x4f\xff\x7f\x1e\xb7\x4e\x09\x60\x06\xee\x0d\xd2\x09\x69\x87\xf6\x49\x37\x66\xcd\xa5\xfc\xc2\x55\x23\x91\x0a\x38\xec\xd7\xf1\x9f\xf5\xc9\xb7\xdd\x80\xeb\x94\xfd\xf0\xbe\x84\x1e\xee\x7b\x34\x86\x1f\xb1\x00\x46\x68\x06\xa0\x41\xec\xce\x16\xbf\x00\x00\x68\xb0\x45\x82\xd8\x85\x9d\x4d\x71\x75\x2d\x10\xd4\x2b\x20\x14\xfa\x84\xc4\x8a\x07\x20\x78\xb3\x02\xd5\xc9\x2c\x2a\xae\x54\x77\x05\x6f\x69\x10\x9f\x88\x34\xf9\xae\xa9\xe1\xe3\x30\xc8\x4e\x70\xdb\x69\x95\x8c\x25\x60\xfc\xd4\xb0\x74\xea\x59\xe9\x17\x35\xfe\x83\x16\xc2\x11\x61\xb3\x0c\x97\x9a\xe3\x2e\xb0\x62\x91\x36\xe6\xa5\xb3\xe2\x09\x2e\xda\x3c\x78\x0f\xc4\xd5\x11\xa1\x9a\x60\x40\x18\x73\x04\x37\x38\x69\x67\x8f\x19\x2d\xef\xa1\xfa\xca\x7b\x84\x10\x8a\xfa\xd2\x87\xd3\xd1\x44\x85\x23\xd7\x03\xfe\x74\x68\xec\xf7\x2c\xd6\x87\x9c\x06\x52\xe2\x11\xb3\xaa\xc3\x7e\xbd\x41\xa1\x1b\x64\x7d\xf1\x90\x3c\xaf\x90\xb1\x8e\xd4\x15\x99\x3d\x69\xab\x85\x96\x73\x2c\x6d\x6f\xab\xc7\x81\x3a\x65\x5b\xb6\x74\x8a\xff\x90\x08\x56\x43\x93\xba\x4c\xe2\x41\x70\x29\x6b\xb8\x3b\x2d\x53\x5a\x71\x8d\x2c\xae\xdf\x6c\xbe\x39\x3b\x38\x1b\x65\x64\x8a\x3c\xa0\x6a\x20\x84\xf2\x2c\xc7\x54\x63\x6d\x53\x65\x61\x2c\x2b\xb3\x55\x63\x95\x99\xb0\x04\x21\x47\x55\xce\xdc\xde\xbf\x9b\xfa\x5c\xcc\xc5\x35\xca\x9b\xc0\xe2\xd0\x0d\x62\x67\x8e\x25\xe8\xe7\x78\x3c\x24\xaa\x58\x36\xb3\x0f\xd1\x3e\xcf\xc9\x40\x8f\xb9\x33\x6f\xf8\xf7\x85\xbc\x3a\xaa\xb1\x79\xb2\xb0\x9b\xa8\xcf\xc5\xce\xf3\x63\x06\xad\x0c\xce\x06\xe8\xd6\x75\xcc\x0e\x94\x47\xd7\xf0\x3f\x40\xc7\xdd\x95\xa3\xc1\x96\x3b\x69\xeb\x3f\xce\x38\x13\xfc\x19\x15\x52\x27\xfe\x3a\x80\xe3\x1b\x9d\xe6\x6e\xbb\xa9\xe1\xae\x59\x96\x97\x47\x38\xf1\x08\x8b\xb0\xf8\x15\x00\x00\xff\xff\x3b\xd9\x0d\xa2\x9f\x04\x00\x00")

func templatesGoRpckit_rpccallGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesGoRpckit_rpccallGoTmpl,
		"templates/go/rpckit_rpccall.go.tmpl",
	)
}

func templatesGoRpckit_rpccallGoTmpl() (*asset, error) {
	bytes, err := templatesGoRpckit_rpccallGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go/rpckit_rpccall.go.tmpl", size: 1183, mode: os.FileMode(436), modTime: time.Unix(1538738867, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGoRpckit_serializationGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x52\x4d\x6f\xd4\x30\x10\xbd\xe7\x57\x3c\x7a\x4a\xaa\xe2\x0b\x88\x03\xea\x5e\xca\xb6\xa8\x07\x60\xd5\xad\xe0\xb8\xb2\x92\x49\x6a\x35\x5f\x1a\x4f\x5a\x8a\xf1\x7f\x47\x76\xd2\xdd\xa4\xa2\x08\x69\x7d\x88\x26\x33\xcf\xef\xcd\xbc\xb1\x3c\xf5\x04\x4b\xfc\x40\xec\x1c\x72\xdd\x1b\xd1\xb5\xf9\x45\x50\x1b\xa6\xd2\xfc\x84\xf7\x3b\xe7\xa0\xbe\xea\x86\xe0\x3d\xac\xf0\x90\x0b\x1c\x9c\x03\xeb\xb6\x22\xa8\x2b\x43\x75\x61\xe1\x7d\x02\x00\x0b\x74\x88\x6f\xd5\xe7\xee\x36\xa8\x78\x9f\x38\xf7\x16\xd4\x16\x21\xf4\x49\x52\x0e\x6d\x8e\xd4\xe2\xf4\xff\xf5\x33\xdc\x6c\x3e\x5d\xaf\xd3\x0c\x83\x69\xe5\xc3\x7b\xb8\x28\xca\x24\x03\xb7\x53\x2e\xdd\x46\xba\x2f\x24\x77\x5d\x31\xbf\x7b\x8c\xe6\x65\x9b\x77\x05\xa5\x0d\x4e\x1b\xb2\x56\x57\x94\x81\x98\x3b\xfe\x87\x13\x8d\xfa\xc1\x46\x68\x73\x31\xba\xb0\x15\x36\x6d\x05\xef\xd3\xf0\x7f\xbd\x86\xf7\x67\xb0\x6a\xa1\x14\xef\xcd\x4c\x9a\xcd\xd6\x9a\xfa\x98\xfe\xd7\xf4\x5a\xff\x51\xe4\x41\x33\xd2\x18\x85\x43\xcc\x63\x75\x9f\x11\x5d\x4d\xee\xc6\xd4\xd8\x68\xd9\x45\x18\x56\xab\xd0\xdd\xc4\x34\xa1\xcf\xc6\x0a\x1a\x75\x43\xba\xf8\xae\xd9\xb4\x92\x66\x7b\x84\x7d\x34\x92\xdf\x45\xda\xd7\x0d\x0c\x27\xd7\x96\x9e\xf7\xba\xf7\x0d\xe7\xe7\x78\x97\xe1\xf7\xac\x20\xd4\xf4\xb5\x16\xc2\x09\xf7\xf9\xbd\x91\x5d\xcf\x5d\x4f\x2c\x4f\x3b\xe9\x76\x8f\x86\x29\x3c\x74\x55\x75\x4a\x9a\xbe\x3e\x39\xec\xc3\xfb\xec\xe3\x5e\x2c\x76\xb6\xd8\xc8\x72\x8c\x97\x8b\x3c\xcc\xf3\x62\x67\xe1\x14\x54\xea\xa1\x96\x25\xbb\x29\x23\xe1\x9b\x15\x4c\xa7\x2e\xbf\x5d\xcd\x4c\x9b\x9b\xff\x2c\xb8\xb9\xd8\xde\x9b\x3e\x15\x5d\x65\x0b\xdc\x41\x65\x8c\xc6\xef\x44\xbe\xfa\x0b\xf9\xec\x11\x1d\xf0\x53\x92\x98\x13\x9f\xfc\x09\x00\x00\xff\xff\x5d\xa9\x58\x09\x09\x04\x00\x00")

func templatesGoRpckit_serializationGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesGoRpckit_serializationGoTmpl,
		"templates/go/rpckit_serialization.go.tmpl",
	)
}

func templatesGoRpckit_serializationGoTmpl() (*asset, error) {
	bytes, err := templatesGoRpckit_serializationGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go/rpckit_serialization.go.tmpl", size: 1033, mode: os.FileMode(436), modTime: time.Unix(1538739726, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGoRpckit_server_methodGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x91\xcf\x6a\xc3\x30\x0c\xc6\xef\x7e\x8a\xef\x34\x9a\x91\x05\x76\xdd\xb5\x87\x6d\x87\xfd\xa1\xeb\x0b\x18\x47\xed\x02\xa9\x5c\x64\x65\x30\x8c\xde\x7d\x38\x4d\x20\x0d\xec\x54\x83\xc1\x48\x3f\xfd\x3e\x63\xeb\xef\x99\xf0\x45\xf2\x43\xf2\x46\xfa\x1d\xdb\x84\x8e\x95\xe4\xe0\x03\x21\x23\x67\x88\xe7\x23\xa1\x99\xbb\x66\x0e\x40\x69\x34\xef\xfe\x44\x30\xdb\x2c\xa8\x57\x3e\x0f\x3a\x33\x2b\x6e\x3c\xef\x9b\xe7\xb8\x2f\x99\x66\xf5\x24\x7a\x00\x71\x3b\xcf\x54\x58\xea\x3e\x06\xbd\xd1\x57\x16\x89\x94\x1d\xe5\x42\x54\x6b\xce\x9c\x3b\x0c\x1c\xb0\xa3\x63\x97\x94\x64\xf7\xb9\xdd\xfa\xbe\x7f\xf1\xdc\xf6\x24\x9b\x80\xfb\x52\x89\xcc\x14\xb4\x8b\x5c\x23\x5d\xbf\x58\x85\x3c\x2a\x43\x93\x48\xe7\xa9\xc7\x1a\x77\x69\x49\x2d\x94\xf9\x74\x29\x3d\x21\x59\x55\xe2\xc7\x5f\xf8\x8f\x46\x52\x19\x82\x4e\x21\xd3\xe8\xf5\x0d\x9c\xb9\xbf\x00\x00\x00\xff\xff\x34\xcf\x01\x2d\xc9\x01\x00\x00")

func templatesGoRpckit_server_methodGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesGoRpckit_server_methodGoTmpl,
		"templates/go/rpckit_server_method.go.tmpl",
	)
}

func templatesGoRpckit_server_methodGoTmpl() (*asset, error) {
	bytes, err := templatesGoRpckit_server_methodGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go/rpckit_server_method.go.tmpl", size: 457, mode: os.FileMode(436), modTime: time.Unix(1538654648, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/go/rpckit.go.tmpl": templatesGoRpckitGoTmpl,
	"templates/go/rpckit_boilerplate.go.tmpl": templatesGoRpckit_boilerplateGoTmpl,
	"templates/go/rpckit_client_method.go.tmpl": templatesGoRpckit_client_methodGoTmpl,
	"templates/go/rpckit_property_to_wiretype.go.tmpl": templatesGoRpckit_property_to_wiretypeGoTmpl,
	"templates/go/rpckit_rpccall.go.tmpl": templatesGoRpckit_rpccallGoTmpl,
	"templates/go/rpckit_serialization.go.tmpl": templatesGoRpckit_serializationGoTmpl,
	"templates/go/rpckit_server_method.go.tmpl": templatesGoRpckit_server_methodGoTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"go": &bintree{nil, map[string]*bintree{
			"rpckit.go.tmpl": &bintree{templatesGoRpckitGoTmpl, map[string]*bintree{}},
			"rpckit_boilerplate.go.tmpl": &bintree{templatesGoRpckit_boilerplateGoTmpl, map[string]*bintree{}},
			"rpckit_client_method.go.tmpl": &bintree{templatesGoRpckit_client_methodGoTmpl, map[string]*bintree{}},
			"rpckit_property_to_wiretype.go.tmpl": &bintree{templatesGoRpckit_property_to_wiretypeGoTmpl, map[string]*bintree{}},
			"rpckit_rpccall.go.tmpl": &bintree{templatesGoRpckit_rpccallGoTmpl, map[string]*bintree{}},
			"rpckit_serialization.go.tmpl": &bintree{templatesGoRpckit_serializationGoTmpl, map[string]*bintree{}},
			"rpckit_server_method.go.tmpl": &bintree{templatesGoRpckit_server_methodGoTmpl, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

