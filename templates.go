// Code generated by go-bindata. DO NOT EDIT. @generated
// sources:
// templates/go/rpckit.go.tmpl
// templates/go/rpckit_boilerplate.go.tmpl
// templates/go/rpckit_client_definition.go.tmpl
// templates/go/rpckit_client_method.go.tmpl
// templates/go/rpckit_property_to_wiretype.go.tmpl
// templates/go/rpckit_rpccall.go.tmpl
// templates/go/rpckit_serialization.go.tmpl
// templates/go/rpckit_server_method.go.tmpl
package rpckit2

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesGoRpckitGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x92\xcb\x6e\xf3\x20\x10\x85\xf7\x79\x8a\xd1\xe8\xdf\xda\x0f\xf0\x4b\xd9\x45\x95\xbc\x68\x9b\x37\x88\x28\x9e\xa4\xa3\x62\xa0\x30\xa9\xaa\x22\xde\xbd\x32\xe4\x5a\xc5\xbd\x66\x87\x66\x8e\x7d\xbe\x73\x20\x25\xe8\x69\xcd\x96\x00\x83\xd7\x4f\x2c\x08\x4d\xce\xb3\x94\x40\x68\xf0\x46\xc9\x61\xb1\x7a\x70\x6c\x28\x94\x59\xbb\x71\xad\x0c\xde\x20\xb4\x50\xd5\x41\xd9\x0d\x41\xbb\x0c\x4e\x9c\x76\x26\xd6\x71\x03\xff\xfc\x38\xb9\x53\x03\xc1\xff\x39\xb4\xe5\xd0\x9c\xed\xba\x45\xd9\x74\x8b\x49\x63\x6d\x98\xac\xac\x0a\x27\x0b\x3b\x7b\xb4\xef\x59\x0b\xe0\x72\xef\x81\xa7\x7e\x75\xdc\x2d\xf0\x60\x74\x86\x7a\x4b\xf2\xe8\xfa\x02\xaa\x9d\x8d\x02\x29\x81\x56\x9e\x45\x19\x7e\xa3\xd3\x1f\xe5\x5c\xb5\xab\x94\x76\x09\x72\xfe\x5a\x0d\xf3\x51\x33\xe6\xca\x79\x76\x31\x57\xa4\xc0\xe3\xe7\xea\x72\x26\x5a\xf3\x2b\x02\x06\x7a\xde\x52\x14\x04\xac\x09\x2b\x01\xde\x30\x99\x3e\x22\xb4\x9d\xf5\xdb\x1f\x74\x00\x13\x25\x7f\x17\x26\x7a\x67\x23\x4d\xd2\xdc\x6f\xe5\x2a\x38\xbb\x3b\x1f\x4a\x95\xbf\xbd\xef\x0f\x90\xa5\xa9\x63\x63\x15\xf5\xc8\x5c\x49\xc8\xf6\x9f\x54\xf4\x42\xe1\xcf\x4c\xbb\x87\x87\x67\x4f\xf0\x92\x5f\xf0\x5a\x2b\x63\xae\xef\x74\xc8\xd8\xec\x8f\xef\x01\x00\x00\xff\xff\xc4\x3d\x25\xce\x07\x04\x00\x00")

func templatesGoRpckitGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesGoRpckitGoTmpl,
		"templates/go/rpckit.go.tmpl",
	)
}

func templatesGoRpckitGoTmpl() (*asset, error) {
	bytes, err := templatesGoRpckitGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go/rpckit.go.tmpl", size: 1031, mode: os.FileMode(420), modTime: time.Unix(1538742440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGoRpckit_boilerplateGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x3c\xff\x73\xd3\xb8\xb3\x3f\xdb\x7f\xc5\x5e\x66\x8e\x67\x53\xe3\xb4\xa5\x07\x5c\x20\xbc\x01\x0a\xef\x31\x1f\x8e\xeb\x00\xf7\xee\x07\xa6\xc3\x38\xb6\x92\x68\x6a\x4b\x39\xdb\x49\xdb\xe1\xf2\xbf\xbf\xd1\xae\x24\xcb\x8e\x9d\x06\xee\xee\xf3\x1e\xc3\xb4\x89\x2c\xad\xf6\xfb\xae\x56\xeb\xae\x92\xf4\x2a\x59\x30\xf8\xfa\x15\xe2\x0b\xfa\xfc\x3e\x29\x18\x6c\xb7\xbe\xcf\x8b\x95\x2c\x6b\x08\x7c\x6f\x34\xbb\xad\x59\x35\xf2\xbd\x51\x2a\x45\xcd\x6e\x6a\xf5\x91\x89\x54\x66\x5c\x2c\xc6\x33\x2e\x92\xf2\x16\x87\xca\x52\x96\x38\x6f\x5e\xe0\x1c\x2e\xd5\xcf\x22\xa9\x97\xe6\xf7\xb8\x4c\x44\xa6\xbe\x08\x86\x33\xaa\x5b\x91\x9a\xdf\xe3\xa4\x96\x05\xc7\xaf\x35\x2f\xd8\xc8\x0f\x7d\x3f\x95\xa2\x42\x1c\xca\x55\xfa\x81\xfd\xb1\x66\x55\x0d\x53\x38\xd1\xdf\xab\x95\x14\x15\x83\x29\x9c\xb6\xe6\xae\x4a\xbe\x49\x6a\xf6\xe9\x76\xc5\x3e\x5c\xbc\x7a\xad\xb0\x82\x35\x17\xf5\xa3\x33\x98\x82\xc2\x22\xfe\x25\xb9\xf9\x0d\x07\x5a\xeb\x0a\x56\x55\xc9\x02\xd7\xfd\xc2\xea\xa5\xcc\x5e\x25\x79\x4e\xdb\xed\x3c\xfa\xc0\xea\x75\x29\x70\x6b\xf7\xe1\x05\x17\x0b\x98\xc2\xc3\xf6\xa0\xc4\x41\x67\x33\xfd\xf0\x55\xb2\x4a\x52\x5e\xdf\xaa\x3d\x8e\x4f\xcf\x7c\x7f\x93\x94\x0a\x91\xd7\x65\xf9\xeb\x86\x95\xf3\x5c\x5e\xc3\x14\x88\xad\xf1\x7b\x76\x1d\x8c\xa4\x19\xe6\x02\x36\x49\xc9\x45\x3d\x0a\x91\x19\x17\x25\x4b\x8a\x59\xae\x98\xf1\xf9\x52\xc9\xeb\xeb\x93\xd3\x08\x9e\x1c\x47\xf0\xe8\x71\x04\x8f\x7f\x8a\xe0\xf1\xc3\x08\x9e\x9c\x45\x70\x6c\xfe\x9f\x6c\x61\x3c\xfe\x10\x5d\x44\xaf\xa2\x7f\x45\x6f\xa3\x4f\x10\xc7\xb0\x61\x65\xc5\xa5\x80\x13\x85\x6b\x7d\xbb\x62\x50\xae\xd2\x5f\x08\x5b\xe0\xa2\x66\xe5\x3c\x49\x19\x7c\xf5\x3d\xc5\x59\xa5\x02\x2c\x28\xe0\xbe\xa6\x27\x24\x5c\xf1\xe1\xdb\xf3\x20\xd4\x5c\xf7\xb7\x0d\x2c\xc5\xd2\xff\x4e\x44\x96\xb3\x72\x07\x9e\x7a\x16\xa4\xf5\x0d\x68\x35\x8b\x5f\xd1\xef\x08\x0a\xe4\xf9\xdb\x73\x0d\x30\x02\x77\xcf\x06\x43\xb5\xd1\x78\x0c\xf7\x87\xfe\x69\x34\xf4\x4a\xa8\xea\x72\x9d\xd6\x6a\xf3\xd9\x7a\x0e\xf4\x8f\x98\xe7\x7b\x39\x13\x7a\x84\x8b\xda\xf7\x56\xb2\x6a\xbe\xc2\x78\x0c\x73\x59\x42\xc9\x12\x65\x01\xbe\xf7\x2e\xa9\x6a\x52\x33\xa2\x7f\xeb\xfb\xf3\xb5\x48\x41\xb0\x6b\x8d\x59\x90\x1a\x51\x73\x51\x87\x16\x79\xb5\x77\x01\x93\x29\xdc\xd3\x03\x5f\x7d\x4f\x21\x33\x81\x22\xb9\x62\x01\x21\x13\xc1\xd9\x91\x59\x1e\x46\xbe\xa7\x70\x9b\xc0\x59\xa4\xd0\x50\xd3\xa0\x94\xb2\x40\x84\x72\x26\x16\xf5\x12\x56\x25\x9b\xf3\x1b\xdf\x53\x58\x1f\x34\x71\xeb\x7b\x25\xe9\x73\x61\x71\xd7\x08\xbd\x29\x65\xf1\x52\x99\x7f\x50\x54\x0b\xcd\x9d\x10\x02\x43\x40\x44\xf4\x7c\xf5\x3d\x3e\x57\x50\xd5\xac\x10\x9e\xc3\x99\x1a\xf2\xf4\x36\x93\xa9\x9a\x15\x90\xa3\x88\x5f\xf2\xc5\x6b\x91\xf1\x44\xc4\xca\x04\x1f\x9e\xe2\x92\xd0\xf7\xda\x10\xa6\x06\x47\x05\x67\x97\x47\x86\x4b\xd5\x22\xc2\x6f\xc8\x12\xb3\x9a\x86\x34\xf1\xea\xf3\x56\xfd\x30\x14\x46\x1a\xb2\x8f\xe3\x0d\xe9\x82\xe7\x11\x1c\x5b\xfa\x5b\x6a\x4d\x1c\x08\x35\xfd\xa8\x31\x0a\xa3\x22\x9e\xad\xe7\x9f\x27\x45\x9c\x33\x71\xe9\x7b\x3b\x04\x5e\xac\x6b\x4d\xe3\x2c\x42\xd5\x55\xd4\xaa\xc9\x8a\x5e\xbd\xed\xac\x7f\xc7\xdf\x4b\x5e\xb3\xff\x41\x0b\x0f\x36\x5a\xed\x91\xcf\x45\xbc\x28\xe5\x75\xf0\x73\xe8\x7b\x4a\x92\x1b\xc5\xaa\xe3\x9b\x27\xc7\xc8\x28\x42\x88\xf0\x81\x29\x28\x64\x83\x4d\x08\x7f\xe2\x0c\x7c\x9e\x33\x71\x74\xe4\x7b\xde\x06\x9e\x3f\x9f\xc2\x63\x64\x40\xff\x2a\xdf\xce\x1e\x46\xf0\x63\x5d\x72\xb1\x08\x36\xca\x94\xb8\x58\x20\x82\xf4\xf1\x9d\x15\xbd\x92\x0a\x41\x73\x69\x22\x8a\x02\x77\x72\x18\xfa\x96\xbc\xd6\xb8\xef\xa5\x72\x75\x1b\x38\x68\x4e\x2e\x23\xb0\x18\xc2\xd1\x14\xdc\xf9\x7b\xf0\x7d\x78\xfa\x92\x1b\x7e\x3e\x3c\x75\xf9\x79\x16\x5a\xf9\xbd\xe3\x75\x9d\xb3\x1d\x11\xee\xdb\xfe\x6c\xcf\x9e\x8f\xce\x9a\x3d\xdb\x32\x7c\xb2\x7f\xcf\x47\x67\x7b\xf7\x7c\xd2\xbf\x27\x42\x16\x8c\x65\x2c\x73\x6d\x93\x64\xa9\xc7\x9f\x93\xa9\x28\xe0\xf8\xdc\x1b\x8f\xe1\xbd\xac\x81\x09\xb9\x5e\x2c\xa1\x5a\x29\x9f\x9c\x88\xdb\xeb\x25\x2b\x59\x04\xd7\x0c\xd4\x42\xa8\x25\x24\x79\x2e\xd3\xa4\x66\x31\xf9\x29\x34\x82\xe4\x8a\x7d\xcc\x79\xca\x82\xd3\xfb\x69\xb2\x32\x60\x8f\x80\x36\x53\x96\x8d\xe2\x9b\xad\xe7\x91\xb6\x98\x63\x6d\x32\xa1\x51\x59\xa5\x75\xeb\xb9\x52\xc6\x5e\x9a\x3e\xb0\x24\xd3\xaa\x16\x82\xd6\x8d\x88\x7c\x2d\xe2\xbf\xc1\x2f\x64\x91\x6a\xae\xd6\xb1\x10\x29\x57\x4f\x7e\x98\x2a\xf3\xd6\x26\xd2\x78\x6b\x8c\xad\xbe\x75\x0d\xa3\x51\x44\x03\x5b\xbf\xe3\xba\x36\x4a\x35\x91\x8b\x2b\x59\x1d\xe9\x67\xcf\x89\xa9\x3d\x50\xb9\x8c\x5f\xff\xfa\xa6\x0d\xd8\x8c\x6d\x7d\x34\x91\xc6\x7d\x20\x4c\x98\xb4\x60\x5f\x2a\x39\xab\xe1\x23\xe3\x07\x7d\xeb\x30\x88\x7c\xc5\x85\x30\x52\x54\x0d\xb3\xcc\xb0\x01\x02\x13\x36\x1d\x96\x25\x25\xdc\x98\xf8\x8c\xdf\x2a\xfc\x46\x5e\x85\x2b\xf4\x8e\x9f\xc2\x53\xe0\x47\x47\x48\xa0\x25\xfe\xa4\x45\xf7\x10\xe1\x06\xd9\xe3\x86\x70\xf4\xc2\xb3\x0e\xdd\x97\xc8\x3b\x05\xf7\x88\x36\x99\xc1\xb3\xc6\x9d\xa9\x01\x0e\xcf\xe1\x67\xf8\xf3\x4f\x08\x38\x4c\xa7\xf0\x33\xdc\xbb\x07\x33\x78\x0e\x27\xa4\xb9\x5d\x0c\x9c\xd4\x09\x9f\x36\x78\x74\x9e\xb8\x31\xe1\x06\xfe\xd4\xac\x08\x66\xe1\xb3\x67\x15\xf1\x95\xe6\xdc\xc0\x9f\x53\xfb\xf0\xde\xf1\xcd\xe3\x79\x08\xcf\x9e\x41\xe5\x7b\x1e\x8a\xe7\xf1\x5e\xad\x7d\x4b\xfc\xdf\x61\xff\xcd\xa0\xc6\x6a\x94\x68\xc3\x9b\x90\x34\x72\x10\xfe\x4b\x29\x73\xb5\xc1\x4c\xca\xfc\x7b\x2d\x42\xef\x38\x4f\xf2\x8a\x35\x06\xa0\x47\x37\x8a\xe9\x27\x77\x28\x1a\xb9\x55\xad\x67\x0f\x4f\x5d\x44\xac\xde\x9c\x7d\x83\xbd\x1c\xb7\xcd\xe5\x46\xd1\xd1\xe7\x28\x3b\x9e\x59\x45\x7c\xbd\xd9\x65\xe8\x58\xd0\x99\xa5\xe6\xe6\x0e\x42\xc8\x57\xf7\x1a\x8c\x25\xe4\xc9\x3f\x44\x88\xe3\xee\x1b\x42\x9e\xb4\x08\x79\x72\x30\x21\x6f\x72\x99\x20\x21\x73\xf5\xa1\x2d\x92\x75\x47\x37\xb4\xf4\xf6\xa8\xc6\xb1\x55\x8b\x26\x51\x54\xc7\xa8\x37\x04\x7c\x5e\xca\x62\xc6\xeb\x2a\x58\xdf\xe5\x91\xce\xe5\x7a\x96\x33\x8b\x57\x9b\xc3\x5d\xbc\xb4\x30\xbe\x17\xaf\x47\x67\x87\xe3\xf5\x16\xd9\xdf\x67\xa8\x83\x48\xb5\xec\x74\xdd\xd8\x29\x9e\x30\xae\x79\x89\x27\x3f\xe3\x60\x9b\x33\xa6\x79\x42\x06\x09\xf6\x9f\x5d\x31\x85\xe3\x66\xd6\xa3\xb3\x19\x77\x26\xb9\xb3\x4e\x9a\x59\x94\xf6\x9c\xb3\x9c\x17\xbc\x66\x99\x3b\xeb\xb4\x99\xf5\xf0\x74\x10\xd6\x4f\xea\xb4\x47\x9c\xb9\xb6\xe3\x21\xd8\x90\x4b\x21\x07\x93\xbb\x6b\x5e\xa7\x4b\xb8\x56\x9f\xd3\xa4\x6a\x28\x25\x7a\x26\x4e\xcc\x6b\x3f\x19\x75\xe6\x23\x65\x7d\xd3\xf1\x41\x77\x76\x87\xc2\xbe\x75\x9d\x29\x5d\x08\x48\x7d\xdf\x3a\x7c\x30\xf2\xbd\x8c\xcd\x93\x75\x8e\x53\x56\x89\xe0\x69\x30\x5a\x8b\x2b\x21\xaf\x05\x82\x50\x52\x55\x27\xed\x3d\xae\xfe\xe2\xe5\xc7\x2b\xbe\x0a\xea\x64\x61\x53\x3d\x54\x23\x13\x6d\x95\x1a\xe9\xe3\xb1\xe1\xa2\x46\x01\xd7\xdc\x83\x20\x38\x51\x91\xe5\x61\x08\x0f\xe0\x24\x0c\xf7\xb0\xf8\x0b\x29\xe5\xae\x73\xef\x67\x71\x67\xba\x55\xe1\xbb\x58\xdc\x59\x67\xd4\x61\x88\xb3\x9d\xe9\xd6\xad\x34\xc1\x64\x30\x94\x61\xa2\x7c\xf1\xf2\x53\xb2\x08\xe6\x9c\xe5\xd9\xfb\x75\x31\x63\xa5\x3d\xed\x5b\x55\x6d\x74\xf3\x6b\xf7\x40\xd1\x5a\x48\x6c\xb4\x41\xdd\x2e\x0b\xf7\x6e\xaf\x09\xec\xc3\x60\x93\xe4\x6b\xe6\x9e\x72\xf8\x5c\x8f\xfd\x30\x85\xd1\x48\x87\x82\x7e\x32\xa2\x21\x1e\x87\xcd\x22\x73\x90\x52\x20\x87\xd5\x4c\xc3\xc7\xa0\x3f\x8c\xa5\xca\x05\x76\x70\xc4\xe8\x7e\x20\x9a\xc4\x51\x07\x3b\xcd\xe2\x93\x3b\x31\x23\x3f\x3a\x8c\x5a\x73\x04\x72\x71\x3b\x3e\x10\x2f\x54\x68\x07\x2d\x52\x64\x2d\x63\x62\xdd\x21\x18\xfe\x63\xf8\x0d\xf1\xed\xdb\x30\xa4\xd0\x3d\x8c\xa3\x8e\xe8\xdf\x8d\x25\xda\xab\x83\x24\xd9\xa9\x1b\xcf\x31\x66\x1e\x88\xad\x8e\xe8\x77\xa0\xfb\xb7\x0b\xdd\x0d\xf3\x3d\xe8\xee\x29\x02\x52\x80\x36\x75\x61\x5b\x52\x74\x42\xf4\x7f\x31\xc1\x4a\x9e\x52\x4e\xa7\xfe\x39\x93\x31\x3a\x7f\xe2\x05\x93\xeb\x7a\x60\xc2\x89\xef\x5d\x94\xb2\x96\xa9\xcc\xed\x8c\xd6\x84\x53\xdf\x7b\xb1\x5a\xe5\x3c\x4d\x6a\x2e\x05\xcd\x69\x4d\x78\x68\x8b\xaf\xb6\x7c\xdd\x2a\x95\xea\x28\x82\x15\xd6\x66\xa1\x5b\x65\xa5\x45\x4d\x7d\x93\x67\x6d\x2c\x34\x0c\xed\xd0\x1a\x01\x33\xb8\x6f\x56\x87\xd0\x81\xaf\xe0\x18\x3f\x1e\xf3\x6c\x60\x11\xfe\x6a\xa5\x0c\x76\x4d\xbb\x36\xda\x5e\xd6\x2e\x18\x3b\xcb\x7a\x6a\xf9\xc3\x20\x86\x0a\xd2\x4e\xb4\x20\x0f\x70\x12\xe9\xc4\x4d\x51\x12\x86\xce\x53\xed\x88\x55\xc2\x4c\x08\x87\x6e\x81\x70\x78\xeb\x73\x36\xb8\xb5\x62\x3d\x15\xf6\x4d\xea\xd5\xa4\x02\x66\xa4\xc9\x1a\x70\x28\xc4\x9f\x73\x2a\x28\xab\x13\x18\x25\xbe\xce\xec\xa1\x0c\xc0\xe4\x16\x0a\xa0\x32\x30\x0c\xd5\xda\x01\x9d\x74\xe3\xe2\xd7\xaf\x50\xb3\x62\x95\x27\x35\x83\x51\xb9\x4a\xaf\x78\xfd\x65\x55\xca\x15\x2b\xeb\xdb\x2f\xb5\xfc\x62\x32\x9f\x78\x21\xe3\xba\x58\xe5\x23\x18\xbd\x15\xf5\x08\xb6\xdb\x50\x05\x7c\x4c\x6b\x78\x06\xba\x88\xe0\x79\x3c\x6b\xa3\xf5\x56\xe3\xe4\x29\x36\xc3\xd4\x51\xa6\x80\x53\x61\xc8\xc1\xee\xf4\x6f\xc0\x8e\xa4\xd7\x20\xa8\x65\x38\x90\xc7\x18\x76\xda\xd4\xcf\xc9\x8e\xa1\x39\x74\xd0\x09\xce\x61\xbf\x2b\x46\x03\xb4\xc9\xfe\xc2\xd6\xbc\xad\xdf\xfe\x44\x3f\x35\xf0\x69\x0f\x70\x47\xd9\x9a\xf9\x3d\xf9\x13\xaf\x0c\x37\x03\xc5\x04\xeb\xc8\x42\x8c\xff\x8e\x05\xe9\xa7\xd3\xe9\x90\x2d\xed\x73\x96\xd6\x0d\xbd\x92\x42\xb0\x54\x39\xac\x5f\x57\xea\x27\x28\x24\x82\xfb\xad\x27\xc6\x6b\x9d\xf3\x2a\xa5\x41\x96\x99\xbb\x1e\x9c\x9e\x42\x7b\x01\xc9\xc5\xe0\x12\xf6\xed\xe6\x38\xb1\x9a\xdc\xae\x65\xad\xfa\x1e\x9f\xaf\x4b\x74\xa3\xbe\xa7\xb6\x6c\x89\x47\x30\xbc\x41\x12\xbe\x77\xc5\xd8\xea\x45\xce\x37\x6c\x60\x69\x76\x2b\x92\x82\xa7\xff\xb2\xd3\x14\x0b\x7d\x95\xe7\xe6\xf9\xdb\xf3\x77\x32\xbd\x02\x80\xea\x56\xa4\xf1\x87\xdf\x7f\x59\xd7\xec\xc6\xf7\x96\x44\x17\xdd\x0a\x15\xc9\xea\x33\x71\xff\xb2\x7d\xc5\xe5\x7b\xd7\x09\xaf\xb9\x58\xa8\xb1\xca\x9d\x97\x2e\x13\x61\x7d\x85\xef\x09\x76\x53\xbf\x3d\xd7\xd8\x51\x15\xc5\xf7\xbd\x3c\xa9\xea\xdf\x2a\x86\x08\xb4\xb7\xd7\x4f\x1a\x62\x54\x4c\xf2\x89\x09\xc4\xb8\x9e\x45\x52\x34\x92\x01\xe8\x13\x93\x05\xc0\x32\x42\x05\x19\xe1\x31\x91\x7d\x60\x49\x25\x85\xd5\x7b\x59\xfa\xbe\x77\xad\x5c\x66\xb3\x0f\xed\x62\xf4\xf3\xc3\xc5\x2b\x1d\x27\x03\x23\xb8\x16\xd7\xc3\x5e\xad\x6a\xd4\xb6\x57\x61\xa8\xe6\x97\xc6\x06\xe2\x14\xf4\x27\x37\x4d\x51\xde\x78\x97\xb4\x20\xeb\x23\xf8\x2f\x61\xd1\xe2\xe7\x14\xb2\x0e\x12\x56\x9d\x82\x46\xff\xfe\x3e\x16\x34\x30\xa7\x60\x3f\x77\xd9\xd0\xd1\xeb\xa0\x57\xd1\xff\x12\x1a\x3b\x10\xa7\xd0\x1d\x72\x91\x7a\xcf\xae\x5b\x60\x02\xb4\x5a\x63\xa9\x11\x48\xdc\xbc\x82\x38\x8e\x7b\x90\x0a\x21\xe8\x3a\x10\xeb\x3c\xf0\xb8\x8c\xd7\x84\xad\x19\x88\xa5\x11\xfa\x04\xcd\xa5\x5c\xb3\x48\x8f\x4e\xac\xb3\x50\xdf\xd4\xa8\xb1\xeb\x89\x36\xec\x2b\x16\x0c\x5a\x37\x5e\x34\xba\x06\x3e\xd9\x59\xd0\x32\x73\x35\x7f\xeb\x53\x85\xfd\x4b\x04\x52\x61\x5b\x26\x62\xc1\x2c\xd9\x0a\x5b\x19\xa4\x21\xcd\xe3\x73\xf8\x62\xcb\x4f\x69\xac\x50\xa4\x34\x25\x70\x2e\xfc\xc3\xa7\x03\xc5\x31\xbc\xcf\xbc\x67\x92\x94\xaf\x3c\x9b\x80\x9b\xd9\xea\x22\xd7\x04\xe6\x45\x1d\x7f\x5c\xa9\xfc\x61\x1e\x8c\x52\xb9\xce\x33\x10\xb2\x06\x34\x6e\x58\xe9\x5d\x26\xf0\xe3\x86\x6e\x47\xc2\x2d\x21\xb7\x90\x90\xc6\x25\x4b\xb2\x77\x52\xae\x74\x95\xce\xd5\x4a\x9b\xe2\xe3\x44\x3b\x6e\x66\x6f\xf5\x02\x63\xc9\xed\xe9\x4b\x96\xe4\xf5\xf2\xd5\x92\xa5\x57\xce\x02\x4d\x58\xda\x29\xe6\xed\xaa\xe6\x07\x56\xc8\x9a\xbd\xc8\x32\x95\x89\x2a\xe5\x52\x1f\x1d\x8d\xd6\xbc\x74\xa7\xed\x03\xd7\x41\x5e\x01\x9a\x53\x52\xe9\xad\x54\x92\x3b\x99\xba\x37\xfd\x9d\xde\x8e\x50\xcf\x6a\x9d\x08\x3b\x1d\x23\xfa\xf6\xdb\x4a\xba\x62\x22\x0b\xd4\xa2\x5d\xe1\x7a\x69\xac\x1e\x2a\x41\x34\x17\x18\x78\x55\xe1\x7b\x5e\x4d\xcb\x1d\x77\x40\x4c\xde\x31\x52\xba\x5c\xd1\xfa\x97\xc5\xea\xd8\xfe\x50\x04\x27\xc7\xc7\x08\xd4\xf8\x55\xeb\xa8\xa8\x2c\x1a\xd4\x21\xdc\x87\xe0\xa7\x63\x38\x02\x1e\xc2\x18\xf4\xfc\xad\xda\x59\x4d\xff\x98\x33\xb6\x0a\xea\xf6\x99\x71\x97\x9d\x3b\xc2\xc5\xe0\xae\x90\x41\x28\xef\xd9\xb5\x0a\x1c\x65\x60\x95\x23\xc4\xea\x1c\x2b\xa1\x8e\x3f\xd6\xa8\x0d\x24\x00\xb2\x9d\x3a\x7e\x45\xcd\x06\x49\x55\xbf\x48\x53\xb6\xaa\x59\xa6\x42\xa3\x85\x27\xaf\x83\x50\x69\x40\xf0\xc0\x85\xe8\x91\x12\x34\xc1\x32\xfe\xa0\x7e\x62\xbe\xca\x6e\x56\xbc\x64\x19\x71\x53\x87\xda\xf8\x25\x9b\xcb\x92\x05\x9d\x6d\xfa\x21\xfd\x26\x72\x82\xa5\x05\xab\xe1\x39\x02\x6c\x1b\xa6\x7b\xa2\xb4\x86\x39\x6a\xa0\x22\x25\x19\xc8\x75\x3d\xda\x76\xe5\xbe\x9f\xd9\x8d\x85\x9a\x3a\x64\x80\x2e\x22\x65\x7c\xc3\x32\xdb\x35\x44\x71\xde\x93\xf3\x79\x04\x05\x17\x2a\xa3\xc5\x4e\x97\x29\x1c\x47\x70\xfa\xd3\x23\x7d\xdd\x3b\x6d\xf7\xa5\x1c\x47\xf0\xd3\xc9\x69\xe8\x7b\x8a\xd0\xb4\xbe\x89\x20\x4d\x44\xca\x72\x64\x9c\xee\xe1\xf9\x9d\xd7\xcb\x57\x38\x1a\x98\xa1\x97\x49\x7a\xb5\x28\xe5\x5a\x64\x01\xde\xf9\x8f\xc7\x70\xc5\xf3\x1c\x66\x49\x06\x0d\xcd\x95\x91\x3a\xc6\x1f\x1d\x6f\x08\x90\xb6\x17\x35\x5f\xa9\x30\x4b\xe5\x86\x95\x41\xf8\x14\x47\x76\x8d\xe5\x5b\x9d\xe0\x5a\x50\x14\xc8\xf4\x11\x8e\x0b\x87\x8d\xda\x13\xce\x92\x2c\xdc\x6a\xed\xdf\x5a\x8d\xd4\x77\xe9\x6a\x36\xcc\x4b\x59\x40\xbd\x64\x0e\x49\x84\xb6\x9c\xcf\x75\x7f\x4b\x60\x2f\xe0\x3d\x7b\x09\xfe\x79\x72\x7c\xa9\x06\xd4\x2c\xac\x36\x90\x69\xf3\x39\xcc\x4b\x86\x5a\x9d\x26\x2b\x5a\xf8\xc0\xc2\x78\x4a\x0f\x9f\x59\xd9\x21\xcc\xf1\x18\x3d\x79\xfb\x56\x5f\x7d\xcf\xd4\x53\xc1\xae\x5f\xd2\x0d\x3e\x5e\xbd\x1b\xd4\x8e\xfa\x20\xf5\x82\x5a\x57\xca\xf9\xcd\xd8\x82\x0b\xa1\x3e\xc9\xb9\x82\x34\x67\xe5\x53\xb3\x24\xc3\xe2\x90\x1e\x05\xd3\xc3\x84\x4f\xf5\xee\xbb\xed\x03\xba\x79\x40\x6f\x1f\xda\xab\x5a\xec\x21\xa0\x55\x11\xf2\x49\xce\xe7\x13\xec\x20\xd0\xbc\xa3\x67\x9f\x27\x86\x27\x0f\xe4\x7c\xde\xc7\xc9\xa2\x1b\x52\xd5\x3e\x6a\xc5\x67\xb3\x72\x62\xf0\x40\xf0\x8d\x64\x8e\x61\x62\x39\x7e\x54\x5c\x36\x4e\xdb\x3d\xc7\x59\xad\x13\x3c\xef\x98\x2a\xb0\xbc\x62\xb0\x7b\x9b\xf5\x9d\x6a\x4a\xca\xa9\x9b\xd0\x48\xdd\x1c\x8f\xd1\xa7\xb4\x18\xbe\x7b\xe2\x86\x51\x5d\x25\xb3\x54\xf9\x65\x2c\x3d\xac\x4a\x56\x24\xb3\x9c\x69\xdd\xf8\x61\xc7\x69\x90\x6a\xe8\xb6\xad\x46\x24\x46\xb9\xdd\x24\x45\xcf\x45\xab\xbd\xad\x59\x15\xbf\xfe\x63\x9d\xe4\xee\x94\x46\xa8\x4a\x09\xbb\xeb\x2f\x2d\x04\x14\xe7\xd1\xee\x0e\xfa\xe9\x0e\x92\x53\x4c\xf8\xe8\xa9\x96\x80\x81\xd4\xc7\xf6\x56\xe9\xae\x71\xc5\x19\xa7\xac\x48\x83\x57\x1e\x9d\x4e\x49\x54\x97\x38\xb5\x89\x92\xf6\xcf\x2e\x8b\x8d\x06\x77\xb6\x9f\x95\x2c\xb9\xf2\xed\x53\x14\x84\x12\xc0\x2a\x29\x2b\xdb\xa3\x58\x61\x8f\x45\xb5\x30\x4d\x6b\x78\x11\xd9\xed\xcc\x6b\x5b\x03\x9f\x43\x51\x2d\x5a\xfa\xe5\x89\x76\x34\xf4\x89\xfa\x4e\xd4\xb2\xe1\x4f\x3d\x33\x07\xcc\x29\x88\xfe\xd9\x6e\x88\x73\x85\x42\x9d\x75\xed\x7c\x66\x21\x6b\xdb\x07\xa9\xa2\x44\x51\xf5\x65\x36\xdd\xdc\xa6\xc5\x42\xe2\x91\xcb\x40\xcb\xbf\xed\x01\x61\xb0\x8d\x41\x4f\x83\x69\xb5\x70\xaf\xf3\x4c\xd9\xf5\x6b\xab\x8f\xb7\xb9\x0a\xae\x16\x87\x76\x55\x1c\xa4\x5d\x4d\xd6\x8d\x91\xc3\x34\x87\x62\x35\x44\xce\x81\x8b\x54\x16\xca\xc6\xf5\x83\x91\x4e\xc1\x75\xa9\xcf\xc1\xd0\xde\x19\xf6\xb6\x32\x4f\x30\x82\xe6\xf9\xdb\xf3\x3d\x94\xf4\x90\xf2\x57\x68\xa1\xfd\xc8\x3b\x51\x17\x2f\x0e\x8d\xb4\xd0\xbc\x95\x86\xf2\xef\xc4\xa9\xd9\x73\x18\x2f\x7d\x0e\x8c\x60\xae\xf2\x14\x52\x63\x73\x36\xfc\xdc\x00\xd0\x41\xe0\x07\x9a\x85\x88\x69\x2a\x0e\x41\xac\x93\x75\xd0\x75\xb3\x01\x3e\x81\x1f\xb3\x51\xe4\x20\x1b\x92\x8b\x28\xd9\x2a\xbf\xbd\xfb\xcc\x41\xf3\x86\x4e\x1d\x6e\x13\xfb\xc0\x6c\x92\xdc\xc0\x43\x56\x96\xb1\xae\xd9\x87\x9a\xe8\xb8\x29\xc0\xe3\xfc\x90\x22\x1b\x9e\x65\xf4\x80\x23\x37\x6a\xbc\x53\x9c\x36\xbd\xdd\xff\x3e\xf9\xdb\x6e\xf2\x01\xe9\xd3\x29\xd4\x49\x3b\xbd\x92\x55\xeb\x1c\x8f\x28\x5a\x07\x62\xa7\x5d\xbd\x69\x4f\x27\xcf\xa6\x9d\xb0\x5e\xd3\xf2\x70\x87\xca\xee\x1b\x85\xb7\x5f\x7a\x3d\x4f\x09\xb7\x96\x04\xbd\x66\x6c\x47\x8a\xbb\x87\x53\x7a\x76\x80\x0f\xdf\x5a\x0f\x8d\xa1\xa2\xdf\x39\x11\x29\xff\x4f\xdc\x13\x41\x6b\x54\x21\x8d\x9b\x32\xb0\x73\x46\x4c\x97\x2d\xdf\xe0\x96\x81\x3e\xd3\x82\xcb\x9d\xc5\x36\x66\xee\x38\x8d\x6f\x20\xa1\xe5\x34\x2c\xce\xfa\x55\x18\x93\xfe\x60\x02\x67\x3c\x8a\x42\x41\x67\x80\x5a\x2d\x1a\xe2\x96\xf0\xec\x81\x62\xf3\xae\x68\x2e\xb8\x58\x4c\xfa\x4c\xe1\x6f\x70\x3f\x17\x52\x58\x3b\x39\x50\xb1\xda\x7a\x65\x34\x6a\x17\x6b\x89\x58\x3b\x1d\x61\x77\xd4\x8a\x92\xf4\x8f\x35\x2f\x99\x12\xdc\xc7\x5c\xb6\x9a\xff\xda\xb5\x45\x57\x92\x46\x0b\xe8\x80\xda\x7a\xe4\xe4\x45\xe3\x31\x60\x95\x43\xa5\xfc\x89\xb8\x85\x2a\x97\x75\x05\xec\x86\x57\xb5\x7d\x5f\xa2\xad\x39\x98\x3b\xbb\x6f\x28\x3d\x3c\xed\xf4\xbb\x1d\x70\x48\x18\x09\x69\xf4\x9a\x76\x4c\x36\x09\xcf\x13\x4c\x4e\x89\x33\xe3\x31\xbc\xe1\x22\x83\x04\x27\x50\x59\x40\x98\x6b\x07\xaf\x4e\xae\x18\x25\x8c\x98\x38\x2b\x4d\xa2\x21\x85\x89\x80\x29\xd0\x7b\x5a\xf1\x8b\x2c\xd3\x0d\x98\xf7\xd2\x98\x2e\x30\x22\x38\x09\xa9\x13\x88\x56\xec\x58\x86\xbe\xda\x13\xe1\xa5\xc5\xe4\x53\x72\xc5\xf0\x9c\x4c\xb8\x0c\x2e\x80\x29\x75\xe5\x6a\x5e\xd8\x07\x77\x56\x03\x93\x59\x22\x32\x29\xac\x84\x35\x6f\x9c\x7e\xfc\xef\x90\x2d\x9f\x1b\x1e\x3f\xef\x13\x98\x6e\x21\x4b\xea\x9a\x15\xab\x5a\xf7\xce\x13\x1e\xc0\xc5\x26\xc9\xb9\xf1\x3d\x23\x5d\xec\xdd\x44\x20\xaf\xf6\xf9\x12\xe5\x31\xe4\xd5\x9d\xd0\xf1\xf8\xae\x16\x21\x3f\x47\xb6\xd4\xba\x71\xcd\x69\x1f\x80\x75\xc5\xb2\x1d\x00\x19\xcb\x59\xcd\x3a\xda\x6a\xdd\xc9\xfe\x02\x54\xce\x92\x8a\xfd\x9f\x73\x5f\xe3\xf1\x0f\x71\xdf\x40\x1f\xe6\xfe\x74\x3f\xf7\x0d\x80\xb5\xe8\xe5\x7f\x9a\xcb\x8a\x5e\xca\xf9\x7e\x49\xa4\x83\xaf\xd7\x29\x50\x6f\x64\xf9\x01\x5d\x3b\xb5\x92\x3b\x39\xb2\x7d\xe7\xae\xfb\x12\x9e\x02\xf8\xa2\x5c\x54\xce\x1b\x78\x8e\xf7\x6c\x5e\x11\x6b\xfb\xd1\x76\x84\x4f\xe3\x1d\x07\xbc\xbf\xe1\x17\xaf\x35\x6c\xd7\x6f\x71\x67\x24\x2a\xf6\x67\x51\x6a\xdb\x9d\x59\x36\x79\x6a\x0f\x3b\xa9\xf8\x2e\x5c\xe2\x8d\x56\x4e\x43\x9c\x66\x90\x93\x54\x15\xbb\xb1\x2d\x8d\xfb\x3d\x54\xb8\x4b\xf7\xb7\x57\x32\x95\xdb\x57\xfa\x85\xaf\xeb\x32\x37\xd9\x85\xa4\x5c\xac\x0b\x26\xea\x6a\xf7\x72\x47\x69\x7b\x4b\x29\xbe\x11\x4f\x1d\xcc\x8b\xd0\x7a\xf9\x8a\xd5\xeb\x15\x95\x43\x71\x6f\x91\x61\x3d\xa2\xf4\x55\x0a\xa2\xdf\x22\x0a\x5a\xb7\x65\x14\x4b\x7a\x9d\x43\xbf\x91\xaa\x68\xb3\xec\xac\x68\x47\x63\x85\x54\x83\x83\xdc\xb0\x52\xb1\x46\x0d\xc8\x7a\xc9\xca\x8a\x67\xcc\xf7\xd4\xa4\xd7\xad\x9c\xa4\x20\x95\x34\x0f\x86\xd5\x52\xcf\xb0\x44\x2b\x2c\x31\x13\x53\x5b\x60\x66\xa3\xc0\xe7\x8c\xfa\x19\x28\x75\xa9\xf0\xfe\xe8\xd9\x83\x74\x89\xf9\x6f\xdc\xef\x2f\xf1\xec\x44\x19\xfa\x27\xec\xe7\xf8\xc6\x14\x39\x8d\x5f\xa1\x07\x09\xdb\xef\xe6\x7c\x97\x52\x51\xdd\xf1\x7a\xc9\x73\x06\x19\xa3\xb7\xc0\x5b\x35\x8b\xb6\x3e\x61\xae\xa6\xb7\x6c\x53\x80\x75\x2d\x8c\xe9\xc8\x8a\x67\x0f\xd2\xfa\x26\x3e\x97\x82\x05\xd8\xbd\x33\x1e\xc3\xef\xec\x3f\x4a\xa6\x2f\x15\x72\x96\xc5\xf0\x8e\xd5\x90\xc0\x42\x96\x72\x5d\x73\xc1\xa0\x48\x84\xda\x35\xcd\x59\x22\xd6\x2b\x90\x73\x2b\xde\x07\xca\x7b\xc6\xbb\xf9\xab\xe2\x34\x71\x64\x88\xd3\xe6\xac\x82\xc9\xc9\xaf\xe7\xbf\x06\x57\x79\x38\x81\x8f\x4b\x3c\x39\x5c\x33\xd2\xa2\x04\x96\x5c\xd4\x46\x7d\x2a\x56\x6e\x58\x19\xa9\xaf\x39\xab\x81\xd7\x1a\x67\x02\x22\x57\x8c\xee\xd1\x40\x0a\xa8\x97\xbc\x82\x92\x5e\x65\xff\xcf\xa6\x5f\x4b\x91\xfe\xba\x2c\xed\x3d\x47\xc5\xac\x9b\x3e\x67\x49\x96\x73\xc1\x5e\xdf\xa4\xf8\x46\xdd\xe4\x4e\x19\xf6\x5f\x27\xb9\xb6\xef\xdc\x27\x75\xb7\xa3\xcb\x9a\x43\xb6\xe9\xcf\x3e\xdd\x6d\xac\xe4\x70\x1b\xa7\xc5\xfe\xaf\x3b\x36\x73\xb4\xc1\x0d\x88\xbb\x25\xf6\xa8\x4c\xe0\xc7\xa3\x8e\xfa\x1d\x7a\x1d\x19\xb4\x4b\x7f\xc3\x37\x84\x36\x3b\x19\xba\xf7\x43\x0f\x6a\x9f\xeb\xab\x3f\xbc\x8b\x6d\x7a\x69\x5c\xfb\x24\x93\x6d\x92\x10\x3b\x2b\x0e\x6c\xf4\x7c\x0a\x3a\x01\xe9\x14\x51\x5a\xaf\xb2\x1d\xc0\x48\x17\xba\x6e\xd7\xdc\xfa\xed\xe2\xea\xe1\xc0\x46\xea\x28\x6d\xc9\x1c\x6d\x7b\xde\xaa\xde\xc7\x7c\xf2\xaf\x83\xc5\x57\xf7\x78\xd8\x92\xd3\x50\xd3\x83\x79\x7b\x0d\x2f\x19\x8c\x7b\xd4\x6f\x6f\xfb\x18\x38\x4c\xcf\x92\x0d\x26\x03\x2d\x16\x08\x21\x6c\x2f\x69\x67\xa0\x3b\x61\xbc\x71\xb1\x87\xf3\x6f\xd0\xb3\xaa\x5d\x1d\xc7\xda\x8d\xd1\x07\xf2\x57\xa3\x44\xda\x6c\x6f\xa5\xf6\x2c\xd0\x87\xec\x9d\xb3\x6f\xff\x55\xc1\x80\x1d\x0c\xf2\xe9\xde\xbd\x96\x05\x4c\x5d\xee\x39\xc3\x4d\x7e\x87\x26\xd3\xb6\x22\xf7\xbb\x7e\xaf\xc1\x8e\x3a\x22\xd0\x75\x19\xb7\x47\x8b\x4c\xb0\x7b\x43\xdc\xe9\xe2\xa2\x37\x3f\xbd\x2c\x48\x89\xdb\x07\x78\x90\x8a\xd5\xa6\xc9\xac\x27\x6d\xd6\x15\xc3\xce\x1f\xbf\xd0\x7c\xed\x2b\x29\x83\xad\x32\x36\x7f\x8c\xc1\x5e\x92\x0a\x7a\xa9\xbb\xf9\x43\x04\xe3\x31\xbc\xa5\xa8\x87\x7f\xe2\x61\x9e\x70\x75\x1c\x58\xf0\x0d\x83\x04\xc8\x49\xa2\x5a\xc5\x3d\xd7\xe9\x58\xa5\xd4\x97\xe7\x2d\xae\xd0\x09\x45\xdf\xd4\x95\xe5\x27\x29\xdf\x25\xe5\x82\x39\xf7\xdd\xcd\xfb\x76\x4e\x3f\x80\xd8\xab\x5a\x44\xd4\x05\x35\xa1\x9a\x3f\xde\x12\x34\x29\x41\x73\xd0\x68\xf9\x03\xeb\x00\xa3\xd6\x9b\x2d\x4e\xff\x6b\x03\x82\xc8\xda\x24\x25\x94\xb6\x0d\xbe\xd5\x5b\x83\x85\x5b\xd3\xab\xdd\x7b\x0b\xf5\x9d\xa6\xdb\xd4\x15\x31\x25\x62\x3a\xd5\x71\xcd\x36\x32\x37\x91\x5b\xd7\x43\x98\xd1\xce\x1f\xa2\x20\xbd\xde\xfa\xff\x1b\x00\x00\xff\xff\x6a\x84\x4c\xda\xa2\x47\x00\x00")

func templatesGoRpckit_boilerplateGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesGoRpckit_boilerplateGoTmpl,
		"templates/go/rpckit_boilerplate.go.tmpl",
	)
}

func templatesGoRpckit_boilerplateGoTmpl() (*asset, error) {
	bytes, err := templatesGoRpckit_boilerplateGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go/rpckit_boilerplate.go.tmpl", size: 18338, mode: os.FileMode(436), modTime: time.Unix(1538749060, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGoRpckit_client_definitionGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\xcd\x31\x0a\x02\x31\x10\x85\xe1\x7a\xe7\x14\xaf\x12\x5d\xd0\x4a\x2c\x6c\x53\xbb\x2c\xde\x20\x8c\x23\x06\xd6\xc9\x12\x27\x88\x0e\xb9\xbb\xbd\x4d\xfa\xef\xbd\xdf\x3e\xab\xc0\x1d\x1c\xd7\x64\x71\x49\x5f\xc1\x61\x2e\xd9\xf2\x14\x9f\x82\xd6\x2e\x62\x8f\x7c\x43\x4d\x6a\xa7\x23\x51\x8f\x87\x25\x89\x1a\x5e\x56\x2a\x1b\x9c\x06\xc6\x78\x9d\x43\xc8\xaa\xc2\x96\xb2\x52\x23\xba\x57\x65\x4c\xf2\xee\xfe\x6c\xff\xd7\x3b\x8c\xfd\xb8\xd3\x50\xc4\x6a\x51\x6c\xe0\xbe\xef\x70\xe7\x33\xb8\x51\xa3\x5f\x00\x00\x00\xff\xff\xa6\xec\x8b\xe9\x0a\x01\x00\x00")

func templatesGoRpckit_client_definitionGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesGoRpckit_client_definitionGoTmpl,
		"templates/go/rpckit_client_definition.go.tmpl",
	)
}

func templatesGoRpckit_client_definitionGoTmpl() (*asset, error) {
	bytes, err := templatesGoRpckit_client_definitionGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go/rpckit_client_definition.go.tmpl", size: 266, mode: os.FileMode(436), modTime: time.Unix(1538742096, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGoRpckit_client_methodGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x54\x4d\x8f\xd3\x30\x10\xbd\xef\xaf\x98\xad\xd4\x55\x02\x21\x27\xc4\x21\xab\x9e\xda\x6a\xd5\x03\x50\x95\x3d\x22\xad\x82\x33\x69\x2d\x5c\x3b\x4c\x26\xa5\x10\xe5\xbf\x23\x3b\x6e\xe3\xb6\xb0\xac\x28\xb9\x24\x9e\x8f\x37\x99\xf7\xc6\x53\x36\x5a\x40\x24\xe0\x55\xdb\x82\xc8\x2b\xc9\xb9\x92\x3f\x11\xd2\x25\x19\x36\x1f\xf2\x2d\x42\xd7\x4d\x95\x44\xcd\x31\xb4\x2d\xa4\xde\x14\xdd\x00\x00\x08\xde\x83\x30\x9a\x71\xcf\xe9\xb4\x7f\x27\xce\xd1\xb6\x6f\x80\x72\xbd\x46\x48\x17\xba\x6a\x18\xba\xce\xd9\xed\xf3\x14\xc0\x38\xc8\xc7\xf4\xc1\x3c\xfe\xa8\xec\x79\xc8\x46\x5d\x1c\x92\x62\x88\xce\x41\x3f\x36\x7c\x2d\xaa\x7d\x90\x08\x56\xcb\xe9\x9c\xc8\x50\xe2\x6b\xb5\x37\xee\x83\xb0\x6e\x14\x5b\x80\xc5\x2c\x81\x6d\xbd\x4e\x5c\x74\x36\x01\x91\x8a\x54\xe4\x4a\x45\x82\xf7\x09\x30\x35\x98\xb8\x82\x8e\xb1\xc5\xcc\xd6\x83\x46\x6a\x7e\xf7\x36\x7a\x86\xd3\xf7\xc8\x1b\x53\x3c\x9d\x45\x78\x67\x9c\xc0\x1d\xe1\xb7\x06\x6b\x3e\x8f\x08\x31\xfe\x90\xdd\x1e\xfb\x7b\xa9\x0c\xd9\xc9\x29\x39\xc9\x0f\x28\xeb\xe2\x9e\x1b\x59\x3a\x2e\x6e\x27\xa0\xa5\x82\xa1\x9c\x2c\x81\x2a\x31\x27\x4a\xc0\x7c\xb5\x54\x21\x51\x1a\x1d\x08\x8e\xef\xad\x75\x88\x3e\x08\x30\xf1\x49\x47\x47\x07\xa8\x6a\xfc\x6d\xe4\x5d\x1f\x6a\xa8\x95\x45\x06\x0f\xa8\x91\x64\x6f\x70\xf2\x18\xca\xa0\xdc\x72\xfa\xa9\x22\xa9\xb9\x8c\x46\x56\x27\x28\x73\xa9\xb0\xc8\x60\xfc\x7a\xf7\x59\x8f\x5c\x60\xea\x72\xa2\x38\x1e\xf8\x18\xbe\x08\xb9\x21\xdd\x77\xdc\x37\x5c\x7f\x97\x2c\x36\x27\x33\xe1\x7f\x4f\xe4\x35\x5e\xad\x76\x76\x2c\xbd\xcb\x09\xc8\xd6\xa9\x8c\xae\xf1\x1f\xb4\x0f\xb5\x28\x50\x98\x02\xe7\xfd\xd4\x52\xba\x5a\x4e\x67\xce\x12\x6d\xeb\x75\x7c\x1f\xb8\x2f\x84\xbc\x82\x70\xd3\xa8\x02\xb4\x61\x0f\xef\x39\xcb\x60\xbc\x1b\x25\x43\xc9\x80\xf7\x33\xc6\x4f\xa5\x78\xf9\x95\xb7\x1d\x86\x86\xf3\x19\xf6\x96\x02\xcb\xdc\xfe\xcf\x09\xe3\xb2\x5e\x92\xdc\xe5\x8c\xf0\xc5\x18\x15\x6e\x87\x24\xf0\xf5\x37\x7f\x93\xeb\x42\xa1\xb7\xad\xbc\x50\xd1\xc5\xb6\x88\x43\x21\x6e\x07\x90\xbf\x73\xec\x44\x16\x46\x3d\x43\x72\xa3\x71\x5f\xa1\x60\x2c\x3c\x73\xc0\x76\xd1\x95\x86\xc0\x0d\xbc\x3b\x8d\xed\xc4\x17\xa3\xff\xb1\x8b\xc2\xee\x2e\x6e\x4c\x77\xd8\x97\x4e\xc2\xee\xe6\x57\x00\x00\x00\xff\xff\x41\x0a\x83\x8b\x51\x06\x00\x00")

func templatesGoRpckit_client_methodGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesGoRpckit_client_methodGoTmpl,
		"templates/go/rpckit_client_method.go.tmpl",
	)
}

func templatesGoRpckit_client_methodGoTmpl() (*asset, error) {
	bytes, err := templatesGoRpckit_client_methodGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go/rpckit_client_method.go.tmpl", size: 1617, mode: os.FileMode(436), modTime: time.Unix(1538749183, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGoRpckit_property_to_wiretypeGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xcd\xc1\x0a\x82\x40\x10\xc6\xf1\xbb\x4f\x31\xec\xdd\x0e\x25\x3e\x40\x48\x10\x74\x2b\xba\x2b\x4e\x36\xb4\xcd\x6c\xd3\x88\xc8\xb2\xef\x1e\xd2\x21\x04\x8b\xee\xbf\xef\xff\xc5\x98\x03\x5d\x00\x1f\xb0\x02\x77\x34\x25\xee\x1c\xe4\x29\x0d\xa4\x78\x1a\x03\x1e\x90\x3b\xbb\x56\xe8\xe9\x4e\x86\x6d\x36\x79\xf4\x4f\xfc\x8c\xb6\x22\x7e\x36\x39\xd7\x4a\x6c\x0b\x72\xcf\x56\x16\x33\x5a\x16\x0d\x7d\x91\xff\x25\x77\x5e\xea\x39\xdd\xac\x97\x93\x95\xf4\x8d\xc7\x5f\xef\x79\x4a\x31\x02\xaa\x8a\x82\xeb\xf9\xc6\x32\x30\x04\x95\x80\x6a\x23\xd8\x18\xd0\x41\x4a\x6f\xcf\xed\xc4\xb3\x57\x00\x00\x00\xff\xff\x94\xf7\xd7\x4d\x3e\x01\x00\x00")

func templatesGoRpckit_property_to_wiretypeGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesGoRpckit_property_to_wiretypeGoTmpl,
		"templates/go/rpckit_property_to_wiretype.go.tmpl",
	)
}

func templatesGoRpckit_property_to_wiretypeGoTmpl() (*asset, error) {
	bytes, err := templatesGoRpckit_property_to_wiretypeGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go/rpckit_property_to_wiretype.go.tmpl", size: 318, mode: os.FileMode(436), modTime: time.Unix(1538739817, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGoRpckit_rpccallGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x94\xcd\x8e\x9b\x30\x10\xc7\xef\x79\x8a\x69\xd4\xad\xcc\x8a\xe5\x54\xf5\xc0\x2a\x87\x2a\xdb\x8f\x1c\xd2\x46\xdb\x07\x88\x5c\x33\x64\xd1\x82\x4d\xc7\x66\x37\x2a\xf2\xbb\x57\xb6\x09\x31\xd9\x64\xab\x96\x0b\x30\x5f\x9e\xf9\xfd\x07\xca\x4e\x0a\x60\x1a\xae\x05\xaf\xeb\xaf\x5c\x16\x35\xd2\x67\x45\x7d\x0f\x82\xb7\x95\xe1\x75\xf5\x1b\x21\xdb\x90\x32\xea\x1b\x6f\x10\xac\x4d\xe0\x7e\xb3\x5c\xf2\xba\x66\xc2\xec\x41\x28\x69\x70\x6f\xb2\x65\xb8\xa7\xd0\xa0\x79\x50\xc5\xea\x0e\xba\x4a\x9a\x0f\xef\x53\x68\xe0\xba\x41\xad\xf9\x0e\x13\x60\x84\xba\x05\x6a\xc5\xfa\x60\xe9\x67\x00\x00\x05\x96\x48\xe0\x7a\x61\x07\x93\xbb\xaa\x12\x08\xf2\x05\x10\x0a\xf5\x84\xc4\x92\x5b\x20\x78\xb3\x00\x59\xd5\x51\x94\xbb\x7c\xdd\x05\xbc\xa3\x56\x7c\x22\x52\xd4\x57\x45\x0e\x1f\xdb\xb6\xae\x04\x37\x95\x92\xde\x98\x02\xba\x5b\x0e\xf3\x4e\x3e\x4a\xf5\x2c\xc3\x3b\x28\x21\x3a\x22\x2c\xe6\x76\xac\x19\x9e\x2c\x4b\x66\xfe\xa1\xef\xe1\x6d\x3b\x32\xc8\x17\x31\x91\x1b\x1b\x82\xf5\x73\x65\xc4\xc3\x71\xfe\x7e\xc8\xbc\x01\xe2\x72\x87\x90\xad\xbd\x47\xc3\x10\x2f\xb8\xc6\x01\x12\x9b\xe2\x8e\x8e\xb2\x36\x64\x6d\x4f\x04\x39\x68\x91\x8f\x1d\x73\xda\xe9\xc0\xea\x57\x87\xda\x6c\x5f\x29\x79\xa1\x58\x6f\x63\xf0\x48\x1e\xbd\x2b\x9b\xdd\x6f\x96\x77\x28\x54\x81\xac\x49\x6e\xbd\xe7\x82\x08\xa6\x23\x79\x22\x82\x07\x25\x54\x3d\x55\xa0\x6c\x4c\xf6\xa3\xa5\x4a\x9a\x92\xcd\x3b\xc9\x7f\xd6\x08\x46\x41\xe1\x4f\x19\x18\x82\x5b\xc9\x1c\xae\x9e\xe6\x3e\x2d\x39\x55\x67\x10\x66\xa0\xfb\xbd\x33\x6d\x67\xdc\x18\xfd\x71\xa2\x1e\x50\x16\x60\x6d\x7a\x18\x47\x67\xa1\xb6\xce\xa2\x30\x36\x99\x42\x98\x7d\x3a\x31\x44\x12\xae\x64\x38\x63\xe2\xf7\x88\xb6\x51\xbd\x97\xe9\xa1\x8b\xd1\x9c\x9c\x82\x3e\x8b\xd3\x6d\x7f\x2b\xd6\x7a\x97\x82\x7a\x74\xcd\x23\x51\xc6\xa2\x8f\xe7\xd6\xd9\xa7\x39\x91\x0c\x21\x77\xe2\xb5\x7f\x97\xeb\xe2\x37\xe3\x0e\xf7\x16\x76\x56\x88\xb1\x18\xea\x56\x49\x8d\xff\xb3\x7f\x97\xa8\x8f\xd2\x4e\x02\x62\xe2\x39\xfc\x0b\x7e\x3b\x3b\xe3\x28\xb0\xe4\x5d\x6d\xf2\x97\x13\xc5\x78\xbe\xa0\x44\xaa\xc4\xab\xcb\x1c\x7e\x2d\xc3\x0e\xaf\xee\x72\xb8\x2a\xe6\xc7\xff\xe2\x40\xcf\xce\xec\xec\x4f\x00\x00\x00\xff\xff\x61\x0c\x5a\x40\x7c\x05\x00\x00")

func templatesGoRpckit_rpccallGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesGoRpckit_rpccallGoTmpl,
		"templates/go/rpckit_rpccall.go.tmpl",
	)
}

func templatesGoRpckit_rpccallGoTmpl() (*asset, error) {
	bytes, err := templatesGoRpckit_rpccallGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go/rpckit_rpccall.go.tmpl", size: 1404, mode: os.FileMode(436), modTime: time.Unix(1538749252, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGoRpckit_serializationGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x53\xc1\x6e\xd4\x30\x10\xbd\xe7\x2b\x86\x9e\xe2\xaa\xf8\x02\xe2\x80\xba\x97\xb2\x2d\xea\x01\x58\xb5\x15\x1c\x57\x56\x32\x49\xad\x26\x76\x34\x99\x50\x4a\xf0\xbf\x23\x3b\x26\x71\x50\xb7\x97\xae\x0f\xd1\x68\x66\xfc\xe6\xcd\x7b\x0e\x3f\x75\x08\xe3\x08\x72\x47\x58\xe9\x5f\xe0\xdc\x7e\x1c\xa1\x50\x9d\x66\xd5\xe8\xdf\xe8\x0b\x96\xed\x57\xd5\xe2\x33\xb5\x98\x86\x9e\x69\x28\x18\xc6\x6c\x1c\xdf\x02\x29\x53\x23\xc8\x2b\x8d\x4d\xd9\x83\x73\x19\x00\x80\xbf\x39\xb7\xfb\xf8\x4e\x7e\xb6\x77\x7e\xb8\x73\xe1\x16\x9a\xd2\x87\x2e\xcb\xaa\xc1\x14\x90\xf7\x70\xfa\x5a\x5a\x02\x6e\x76\x9f\xae\xb7\xb9\x80\x41\x1b\xfe\xf0\x1e\xc6\x40\x85\x90\x07\x32\x31\x97\xbf\x00\xfb\x05\xf9\xde\x96\x87\xc0\x8f\x4f\xf5\xd2\x14\xb6\xc4\xbc\x85\xd3\x16\xfb\x5e\xd5\x28\x00\x89\x2c\x45\xde\x07\xb5\x6d\xe5\x0f\xd2\x8c\xbb\x8b\x49\xd7\x5b\x26\x6d\x6a\x70\xce\xef\x26\xaf\xb7\xe0\xdc\x19\xf4\x32\x75\x40\xcc\x80\x51\xf6\x44\x17\xa3\x9b\xe3\xaf\xb6\xc5\x17\x57\xfb\xa9\x08\xf2\x10\xf9\x83\x44\x53\x75\xce\xb0\xaa\xa3\x5f\x21\x35\xd1\xaf\x6c\x68\x83\xcd\xc6\x73\x8e\x48\xb1\xfb\x6c\xaa\x40\x2b\x6f\x50\x95\xdf\x15\x69\xc3\xb9\x98\x3b\xfa\x47\xcd\xc5\x7d\x80\x5d\xae\x1d\xd4\xd7\x9f\x42\xf5\x98\x3c\x99\x49\x56\x38\x3f\x87\x77\x02\xfe\x24\x05\xc6\xb6\x6b\x14\x23\x9c\x50\x57\x3c\x68\xde\x77\x64\x3b\x24\x7e\xda\xb3\xdd\x3f\x6a\x42\xff\xc3\xc9\xda\x4a\x6e\xbb\xe6\x64\xb1\xcb\x39\xf1\x71\x1e\x16\x28\xae\x0c\x5b\xef\xf3\xbf\xcf\x62\xb5\x43\x62\xa9\x3f\x25\x56\x6a\x68\x78\x8d\xae\xab\x00\xf8\x66\x03\xda\xca\xcb\x6f\x57\x89\x0c\xa9\x0b\xff\x06\xee\x2e\x6e\x1f\x74\x97\xb3\xaa\xc5\xaa\x6f\x99\x32\x45\xd3\x37\x82\x6f\x9e\x01\x4f\xde\xd8\xd2\x1f\x93\x48\x94\xb9\xec\x6f\x00\x00\x00\xff\xff\xd7\x99\x33\x52\x91\x04\x00\x00")

func templatesGoRpckit_serializationGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesGoRpckit_serializationGoTmpl,
		"templates/go/rpckit_serialization.go.tmpl",
	)
}

func templatesGoRpckit_serializationGoTmpl() (*asset, error) {
	bytes, err := templatesGoRpckit_serializationGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go/rpckit_serialization.go.tmpl", size: 1169, mode: os.FileMode(436), modTime: time.Unix(1538749132, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGoRpckit_server_methodGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x92\x41\x6a\xf3\x30\x10\x85\xf7\x3e\xc5\x5b\xfd\xd8\x3f\xa9\x0e\xd0\xad\x4b\xdb\x2c\xda\x86\x90\x0b\x08\x79\x92\x0a\x1c\xc9\x48\x63\x48\x2b\xe6\xee\x45\xb6\x4c\xc1\x8b\x60\xa8\xc1\x48\x68\xde\xfb\x98\x37\x12\x7f\x0d\x84\x94\x60\xf4\x60\x59\xf7\xf6\x9b\xa0\x0e\xc1\xb3\x7f\xd7\x57\x82\xc8\x1b\xf1\xa7\xef\x22\xac\x63\x0a\x67\x6d\x08\xa9\x02\x80\x94\x1e\x10\xb4\xbb\x10\xd4\x22\x11\x29\x15\xa8\x62\xae\xa7\x03\xc3\x37\x18\xef\x98\x6e\xac\xda\x79\xdd\xad\x19\x7b\x37\x8c\xbc\x10\x56\x94\x69\x7f\x52\x2f\xfe\x94\x7b\x15\xf9\x35\x93\xeb\x16\x4f\x83\x7a\xcd\xfc\x18\xf9\x8f\xd0\xfc\x51\x08\xf9\xf7\x61\x56\x34\x6b\x9d\x54\xd5\x79\x74\x06\x47\xba\xd8\xc8\x14\xee\xcc\xf2\x55\xbb\xae\xa7\x50\x1b\xfc\x3f\x1e\xda\xd6\x3b\x47\x86\xad\x77\x3b\xc4\x0d\x57\xd0\x94\xc9\x1b\x15\x89\x17\x54\x4e\x31\x69\xf7\x4f\x39\x04\xfe\x19\xdd\xf7\xa5\xf8\xec\xef\x35\x93\xae\x33\xf6\x11\x51\x9a\x9c\x62\x7a\x09\xdb\xec\x22\x88\x1c\x46\xc3\xa5\xa5\x82\xda\x10\xa2\x92\xea\x27\x00\x00\xff\xff\x95\x7d\xbd\x70\x72\x02\x00\x00")

func templatesGoRpckit_server_methodGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesGoRpckit_server_methodGoTmpl,
		"templates/go/rpckit_server_method.go.tmpl",
	)
}

func templatesGoRpckit_server_methodGoTmpl() (*asset, error) {
	bytes, err := templatesGoRpckit_server_methodGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go/rpckit_server_method.go.tmpl", size: 626, mode: os.FileMode(436), modTime: time.Unix(1538743844, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/go/rpckit.go.tmpl": templatesGoRpckitGoTmpl,
	"templates/go/rpckit_boilerplate.go.tmpl": templatesGoRpckit_boilerplateGoTmpl,
	"templates/go/rpckit_client_definition.go.tmpl": templatesGoRpckit_client_definitionGoTmpl,
	"templates/go/rpckit_client_method.go.tmpl": templatesGoRpckit_client_methodGoTmpl,
	"templates/go/rpckit_property_to_wiretype.go.tmpl": templatesGoRpckit_property_to_wiretypeGoTmpl,
	"templates/go/rpckit_rpccall.go.tmpl": templatesGoRpckit_rpccallGoTmpl,
	"templates/go/rpckit_serialization.go.tmpl": templatesGoRpckit_serializationGoTmpl,
	"templates/go/rpckit_server_method.go.tmpl": templatesGoRpckit_server_methodGoTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"go": &bintree{nil, map[string]*bintree{
			"rpckit.go.tmpl": &bintree{templatesGoRpckitGoTmpl, map[string]*bintree{}},
			"rpckit_boilerplate.go.tmpl": &bintree{templatesGoRpckit_boilerplateGoTmpl, map[string]*bintree{}},
			"rpckit_client_definition.go.tmpl": &bintree{templatesGoRpckit_client_definitionGoTmpl, map[string]*bintree{}},
			"rpckit_client_method.go.tmpl": &bintree{templatesGoRpckit_client_methodGoTmpl, map[string]*bintree{}},
			"rpckit_property_to_wiretype.go.tmpl": &bintree{templatesGoRpckit_property_to_wiretypeGoTmpl, map[string]*bintree{}},
			"rpckit_rpccall.go.tmpl": &bintree{templatesGoRpckit_rpccallGoTmpl, map[string]*bintree{}},
			"rpckit_serialization.go.tmpl": &bintree{templatesGoRpckit_serializationGoTmpl, map[string]*bintree{}},
			"rpckit_server_method.go.tmpl": &bintree{templatesGoRpckit_server_methodGoTmpl, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

