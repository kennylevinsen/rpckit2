// Code generated by go-bindata. DO NOT EDIT. @generated
// sources:
// templates/go-pb/rpckit.go.tmpl
// templates/go-pb/rpckit_boilerplate.go.tmpl
// templates/go-pb/rpckit_client_definition.go.tmpl
// templates/go-pb/rpckit_client_method.go.tmpl
// templates/go-pb/rpckit_property_to_wiretype.go.tmpl
// templates/go-pb/rpckit_rpccall.go.tmpl
// templates/go-pb/rpckit_serialization.go.tmpl
// templates/go-pb/rpckit_server_method.go.tmpl
package rpckit2

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesGoPbRpckitGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x92\xcb\x6e\xf3\x20\x10\x85\xf7\x79\x8a\xd1\xe8\xdf\xda\x0f\xf0\x4b\xd9\x45\x95\xbc\x68\x9b\x37\x88\x28\x9e\xa4\xa3\x62\xa0\x30\xa9\xaa\x22\xde\xbd\x32\xe4\x5a\xc5\xbd\x66\x87\x66\x8e\x7d\xbe\x73\x20\x25\xe8\x69\xcd\x96\x00\x83\xd7\x4f\x2c\x08\x4d\xce\xb3\x94\x40\x68\xf0\x46\xc9\x61\xb1\x7a\x70\x6c\x28\x94\x59\xbb\x71\xad\x0c\xde\x20\xb4\x50\xd5\x41\xd9\x0d\x41\xbb\x0c\x4e\x9c\x76\x26\xd6\x71\x03\xff\xfc\x38\xb9\x53\x03\xc1\xff\x39\xb4\xe5\xd0\x9c\xed\xba\x45\xd9\x74\x8b\x49\x63\x6d\x98\xac\xac\x0a\x27\x0b\x3b\x7b\xb4\xef\x59\x0b\xe0\x72\xef\x81\xa7\x7e\x75\xdc\x2d\xf0\x60\x74\x86\x7a\x4b\xf2\xe8\xfa\x02\xaa\x9d\x8d\x02\x29\x81\x56\x9e\x45\x19\x7e\xa3\xd3\x1f\xe5\x5c\xb5\xab\x94\x76\x09\x72\xfe\x5a\x0d\xf3\x51\x33\xe6\xca\x79\x76\x31\x57\xa4\xc0\xe3\xe7\xea\x72\x26\x5a\xf3\x2b\x02\x06\x7a\xde\x52\x14\x04\xac\x09\x2b\x01\xde\x30\x99\x3e\x22\xb4\x9d\xf5\xdb\x1f\x74\x00\x13\x25\x7f\x17\x26\x7a\x67\x23\x4d\xd2\xdc\x6f\xe5\x2a\x38\xbb\x3b\x1f\x4a\x95\xbf\xbd\xef\x0f\x90\xa5\xa9\x63\x63\x15\xf5\xc8\x5c\x49\xc8\xf6\x9f\x54\xf4\x42\xe1\xcf\x4c\xbb\x87\x87\x67\x4f\xf0\x92\x5f\xf0\x5a\x2b\x63\xae\xef\x74\xc8\xd8\xec\x8f\xef\x01\x00\x00\xff\xff\xc4\x3d\x25\xce\x07\x04\x00\x00")

func templatesGoPbRpckitGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesGoPbRpckitGoTmpl,
		"templates/go-pb/rpckit.go.tmpl",
	)
}

func templatesGoPbRpckitGoTmpl() (*asset, error) {
	bytes, err := templatesGoPbRpckitGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go-pb/rpckit.go.tmpl", size: 1031, mode: os.FileMode(420), modTime: time.Unix(1538742440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGoPbRpckit_boilerplateGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x3c\x6d\x73\xdb\x36\x93\x9f\xc9\x5f\xb1\xd5\x4c\x73\x64\xcc\x50\xb6\xe3\x26\xa9\x12\xe5\x26\x89\x93\xbb\xcc\x93\xa6\x1e\x27\xbd\x7e\xc8\x78\x32\x14\x09\x49\x18\x93\x80\x4a\x52\xb2\x3d\xae\xfe\xfb\x0d\x76\x01\x10\xa4\x48\xd9\x49\xdb\xe7\x2e\x93\xb1\x25\x10\x58\xec\xfb\x2e\x16\x4b\xaf\x92\xf4\x32\x59\x30\xb8\xbd\x85\xf8\x8c\x3e\x7f\x4c\x0a\x06\xdb\xad\xef\xf3\x62\x25\xcb\x1a\x02\xdf\x1b\xcd\x6e\x6a\x56\x8d\x7c\x6f\x94\x4a\x51\xb3\xeb\x5a\x7d\x64\x22\x95\x19\x17\x8b\xf1\x8c\x8b\xa4\xbc\xc1\xa1\xb2\x94\x25\xce\x9b\x17\x38\x87\x4b\xf5\xb3\x48\xea\xa5\xf9\x3d\x2e\x13\x91\xa9\x2f\x82\xe1\x8c\xea\x46\xa4\xe6\xf7\x38\xa9\x65\xc1\xf1\x6b\xcd\x0b\x36\xf2\x43\xdf\x4f\xa5\xa8\x10\x87\x72\x95\x9e\xb3\x3f\xd6\xac\xaa\x61\x0a\x47\xfa\x7b\xb5\x92\xa2\x62\x30\x85\xe3\xd6\xdc\x55\xc9\x37\x49\xcd\x3e\xdf\xac\xd8\xf9\xd9\x9b\xb7\x0a\x2b\x58\x73\x51\x3f\x39\x81\x29\x28\x2c\xe2\x5f\x92\xeb\xdf\x70\xa0\xb5\xae\x60\x55\x95\x2c\x70\xdd\x2f\xac\x5e\xca\xec\x4d\x92\xe7\xb4\xdd\xce\xa3\x73\x56\xaf\x4b\x81\x5b\xbb\x0f\xcf\xb8\x58\xc0\x14\x1e\xb7\x07\x25\x0e\x3a\x9b\xe9\x87\x6f\x92\x55\x92\xf2\xfa\x46\xed\x71\x78\x7c\xe2\xfb\x9b\xa4\x54\x88\xbc\x2d\xcb\x5f\x37\xac\x9c\xe7\xf2\x0a\xa6\x40\x6c\x8d\x3f\xb2\xab\x60\x24\xcd\x30\x17\xb0\x49\x4a\x2e\xea\x51\x88\xcc\x38\x2b\x59\x52\xcc\x72\xc5\x8c\x2f\x17\x4a\x5e\xb7\xcf\x8e\x23\x78\x76\x18\xc1\x93\xa7\x11\x3c\xfd\x29\x82\xa7\x8f\x23\x78\x76\x12\xc1\xa1\xf9\x7f\xb4\x85\xf1\xf8\x3c\x3a\x8b\xde\x44\xff\x8a\xde\x47\x9f\x21\x8e\x61\xc3\xca\x8a\x4b\x01\x47\x0a\xd7\xfa\x66\xc5\xa0\x5c\xa5\xbf\x10\xb6\xc0\x45\xcd\xca\x79\x92\x32\xb8\xf5\x3d\xc5\x59\xa5\x02\x2c\x28\xe0\xa1\xa6\x27\x24\x5c\xf1\xe1\xfb\xd3\x20\xd4\x5c\xf7\xb7\x0d\x2c\xc5\xd2\xff\x4e\x44\x96\xb3\x72\x07\x9e\x7a\x16\xa4\xf5\x35\x68\x35\x8b\xdf\xd0\xef\x08\x0a\xe4\xf9\xfb\x53\x0d\x30\x02\x77\xcf\x06\x43\xb5\xd1\x78\x0c\x0f\x87\xfe\x69\x34\xf4\x4a\xa8\xea\x72\x9d\xd6\x6a\xf3\xd9\x7a\x0e\xf4\x8f\x98\xe7\x7b\x39\x13\x7a\x84\x8b\xda\xf7\x56\xb2\x6a\xbe\xc2\x78\x0c\x73\x59\x42\xc9\x12\x65\x01\xbe\xf7\x21\xa9\x6a\x52\x33\xa2\x7f\xeb\xfb\xf3\xb5\x48\x41\xb0\x2b\x8d\x59\x90\x1a\x51\x73\x51\x87\x16\x79\xb5\x77\x01\x93\x29\x3c\xd0\x03\xb7\xbe\xa7\x90\x99\x40\x91\x5c\xb2\x80\x90\x89\xe0\xe4\xc0\x2c\x0f\x23\xdf\x53\xb8\x4d\xe0\x24\x52\x68\xa8\x69\x50\x4a\x59\x20\x42\x39\x13\x8b\x7a\x09\xab\x92\xcd\xf9\xb5\xef\x29\xac\xef\x35\x71\xeb\x7b\x25\xe9\x73\x61\x71\xd7\x08\xbd\x2b\x65\xf1\x5a\x99\x7f\x50\x54\x0b\xcd\x9d\x10\x02\x43\x40\x44\xf4\xdc\xfa\x1e\x9f\x2b\xa8\x6a\x56\x08\x2f\xe1\x44\x0d\x79\x7a\x9b\xc9\x54\xcd\x0a\xc8\x51\xc4\xaf\xf9\xe2\xad\xc8\x78\x22\x62\x65\x82\x8f\x8f\x71\x49\xe8\x7b\x6d\x08\x53\x83\xa3\x82\xb3\xcb\x23\xc3\xa5\x6a\x11\xe1\x37\x64\x89\x59\x4d\x43\x9a\x78\xf5\x79\xab\x7e\x18\x0a\x23\x0d\xd9\xc7\xf1\x86\x74\xc1\xf3\x08\x0e\x2d\xfd\x2d\xb5\x26\x0e\x84\x9a\x7e\xd4\x18\x85\x51\x11\xcf\xd6\xf3\x2f\x93\x22\xce\x99\xb8\xf0\xbd\x1d\x02\xcf\xd6\xb5\xa6\x71\x16\xa1\xea\x2a\x6a\xd5\x64\x45\xaf\xde\x76\xd6\xbf\xe3\xef\x25\xaf\xd9\xff\xa0\x85\x07\x1b\xad\xf6\xc8\xe7\x22\x5e\x94\xf2\x2a\xf8\x39\xf4\x3d\x25\xc9\x8d\x62\xd5\xe1\xf5\xb3\x43\x64\x14\x21\x44\xf8\xc0\x14\x14\xb2\xc1\x26\x84\x3f\x71\x06\x3e\xcf\x99\x38\x38\xf0\x3d\x6f\x03\x2f\x5f\x4e\xe1\x29\x32\xa0\x7f\x95\x6f\x67\x0f\x23\xf8\xa9\x2e\xb9\x58\x04\x1b\x65\x4a\x5c\x2c\x10\x41\xfa\xf8\xc1\x8a\x5e\x49\x85\xa0\xb9\x34\x11\x45\x81\x3b\x39\x0c\x7d\x4b\x5e\x6b\xdc\xf7\x52\xb9\xba\x09\x1c\x34\x27\x17\x11\x58\x0c\xe1\x60\x0a\xee\xfc\x3d\xf8\x3e\x3e\x7e\xcd\x0d\x3f\x1f\x1f\xbb\xfc\x3c\x09\xad\xfc\x3e\xf0\xba\xce\xd9\x8e\x08\xf7\x6d\x7f\xb2\x67\xcf\x27\x27\xcd\x9e\x6d\x19\x3e\xdb\xbf\xe7\x93\x93\xbd\x7b\x3e\xeb\xdf\x13\x21\x0b\xc6\x32\x96\xb9\xb6\x49\xb2\xd4\xe3\x2f\xc9\x54\x14\x70\x7c\xee\x8d\xc7\xf0\x51\xd6\xc0\x84\x5c\x2f\x96\x50\xad\x94\x4f\x4e\xc4\xcd\xd5\x92\x95\x2c\x82\x2b\x06\x6a\x21\xd4\x12\x92\x3c\x97\x69\x52\xb3\x98\xfc\x14\x1a\x41\x72\xc9\x3e\xe5\x3c\x65\xc1\xf1\xc3\x34\x59\x19\xb0\x07\x40\x9b\x29\xcb\x46\xf1\xcd\xd6\xf3\x48\x5b\xcc\xa1\x36\x99\xd0\xa8\xac\xd2\xba\xf5\x5c\x29\x63\x2f\x4d\xe7\x2c\xc9\xb4\xaa\x85\xa0\x75\x23\x22\x5f\x8b\xf8\x6f\xf0\x0b\x59\xa4\x9a\xab\x75\x2c\x44\xca\xd5\x93\x1f\xa6\xca\xbc\xb5\x89\x34\xde\x1a\x63\xab\x6f\x5d\xc3\x68\x14\xd1\xc0\xd6\xef\xb8\xae\x8d\x52\x4d\xe4\xe2\x4a\x56\x07\xfa\xd9\x4b\x62\x6a\x0f\x54\x2e\xe3\xb7\xbf\xbe\x6b\x03\x36\x63\x5b\x1f\x4d\xa4\x71\x1f\x08\x13\x26\x2d\xd8\x17\x4a\xce\x6a\xf8\xc0\xf8\x41\xdf\x3a\x0c\x22\x5f\x71\x21\x8c\x14\x55\xc3\x2c\x33\x6c\x80\xc0\x84\x4d\x87\x65\x49\x09\xd7\x26\x3e\xe3\xb7\x0a\xbf\x91\x57\xe1\x0a\xbd\xc3\xe7\xf0\x1c\xf8\xc1\x01\x12\x68\x89\x3f\x6a\xd1\x3d\x44\xb8\x41\xf6\xb0\x21\x1c\xbd\xf0\xac\x43\xf7\x05\xf2\x4e\xc1\x3d\xa0\x4d\x66\xf0\xa2\x71\x67\x6a\x80\xc3\x4b\xf8\x19\xfe\xfc\x13\x02\x0e\xd3\x29\xfc\x0c\x0f\x1e\xc0\x0c\x5e\xc2\x11\x69\x6e\x17\x03\x27\x75\xc2\xa7\x0d\x1e\x9d\x27\x6e\x4c\xb8\x86\x3f\x35\x2b\x82\x59\xf8\xe2\x45\x45\x7c\xa5\x39\xd7\xf0\xe7\xd4\x3e\x7c\x70\x78\xfd\x74\x1e\xc2\x8b\x17\x50\xf9\x9e\x87\xe2\x79\xba\x57\x6b\xdf\x13\xff\x77\xd8\x7f\x3d\xa8\xb1\x1a\x25\xda\xf0\x3a\x24\x8d\x1c\x84\xff\x5a\xca\x5c\x6d\x30\x93\x32\xff\x5e\x8b\xd0\x3b\xce\x93\xbc\x62\x8d\x01\xe8\xd1\x8d\x62\xfa\xd1\x1d\x8a\x46\x6e\x55\xeb\xd9\xe3\x63\x17\x11\xab\x37\x27\xdf\x60\x2f\x87\x6d\x73\xb9\x56\x74\xf4\x39\xca\x8e\x67\x56\x11\x5f\x6f\x76\x11\x3a\x16\x74\x62\xa9\xb9\xbe\x83\x10\xf2\xd5\xbd\x06\x63\x09\x79\xf6\x0f\x11\xe2\xb8\xfb\x86\x90\x67\x2d\x42\x9e\xdd\x9b\x90\x77\xb9\x4c\x90\x90\xb9\xfa\xd0\x16\xc9\xba\xa3\x1b\x5a\x7a\x7b\x54\xe3\xd0\xaa\x45\x93\x28\xaa\x63\xd4\x3b\x02\x3e\x2f\x65\x31\xe3\x75\x15\xac\xef\xf2\x48\xa7\x72\x3d\xcb\x99\xc5\xab\xcd\xe1\x2e\x5e\x5a\x18\xdf\x8b\xd7\x93\x93\xfb\xe3\xf5\x1e\xd9\xdf\x67\xa8\x83\x48\xb5\xec\x74\xdd\xd8\x29\x9e\x30\xae\x78\x89\x27\x3f\xe3\x60\x9b\x33\xa6\x79\x42\x06\x09\xf6\x9f\x5d\x31\x85\xc3\x66\xd6\x93\x93\x19\x77\x26\xb9\xb3\x8e\x9a\x59\x94\xf6\x9c\xb2\x9c\x17\xbc\x66\x99\x3b\xeb\xb8\x99\xf5\xf8\x78\x10\xd6\x4f\xea\xb4\x47\x9c\xb9\xb2\xe3\x21\xd8\x90\x4b\x21\x07\x93\xbb\x2b\x5e\xa7\x4b\xb8\x52\x9f\xd3\xa4\x6a\x28\x25\x7a\x26\x4e\xcc\x6b\x3f\x19\x75\xe6\x23\x65\x7d\xd3\xf1\x41\x77\x76\x87\xc2\xbe\x75\x9d\x29\x5d\x08\x48\x7d\xdf\x3a\x7c\x30\xf2\xbd\x8c\xcd\x93\x75\x8e\x53\x56\x89\xe0\x69\x30\x5a\x8b\x4b\x21\xaf\x04\x82\x50\x52\x55\x27\xed\x3d\xae\xfe\xec\xf5\xa7\x4b\xbe\x0a\xea\x64\x61\x53\x3d\x54\x23\x13\x6d\x95\x1a\xe9\xe3\xb1\xe1\xa2\x46\x01\xd7\x3c\x80\x20\x38\x52\x91\xe5\x71\x08\x8f\xe0\x28\x0c\xf7\xb0\xf8\x2b\x29\xe5\xae\x73\xef\x67\x71\x67\xba\x55\xe1\xbb\x58\xdc\x59\x67\xd4\x61\x88\xb3\x9d\xe9\xd6\xad\x34\xc1\x64\x30\x94\x61\xa2\x7c\xf6\xfa\x73\xb2\x08\xe6\x9c\xe5\xd9\xc7\x75\x31\x63\xa5\x3d\xed\x5b\x55\x6d\x74\xf3\xb6\x7b\xa0\x68\x2d\x24\x36\xda\xa0\x6e\x97\x85\x7b\xb7\xd7\x04\xf6\x61\xb0\x49\xf2\x35\x73\x4f\x39\x7c\xae\xc7\x7e\x98\xc2\x68\xa4\x43\x41\x3f\x19\xd1\x10\x8f\xc3\x66\x91\x39\x48\x29\x90\xc3\x6a\xa6\xe1\x63\xd0\x1f\xc6\x52\xe5\x02\x3b\x38\x62\x74\xbf\x27\x9a\xc4\x51\x07\x3b\xcd\xe2\xa3\x3b\x31\x23\x3f\x3a\x8c\x5a\x73\x04\x72\x71\x3b\xbc\x27\x5e\xa8\xd0\x0e\x5a\xa4\xc8\x5a\xc6\xc4\xba\xfb\x60\xf8\x8f\xe1\x37\xc4\xb7\x6f\xc3\x90\x42\xf7\x30\x8e\x3a\xa2\x7f\x37\x96\x68\xaf\x0e\x92\x64\xa7\x6e\x3c\xc7\x98\x79\x4f\x6c\x75\x44\xbf\x03\xdd\xbf\x5d\xe8\x6e\x98\xef\x41\x77\x4f\x11\x90\x02\xb4\xa9\x0b\xdb\x92\xa2\x13\xa2\xff\x8b\x09\x56\xf2\x94\x72\x3a\xf5\xcf\x99\x8c\xd1\xf9\x33\x2f\x98\x5c\xd7\x03\x13\x8e\x7c\xef\xac\x94\xb5\x4c\x65\x6e\x67\xb4\x26\x1c\xfb\xde\xab\xd5\x2a\xe7\x69\x52\x73\x29\x68\x4e\x6b\xc2\x63\xdf\x7b\x23\x85\x60\x69\xf3\xbc\x3d\xe1\xc4\x56\x67\x6d\x7d\xbb\x55\x4b\xd5\x61\x06\x4b\xb0\xcd\x42\xb7\x0c\x4b\x8b\x9a\x02\x28\xcf\xda\x68\x6a\x18\xda\xe3\x35\x1a\xc0\xe0\xa1\x59\x1d\x42\x07\xbe\x82\x63\x1c\x7d\xcc\xb3\x81\x45\xf8\xab\x95\x53\xd8\x35\xed\xe2\x69\x7b\x59\xbb\xa2\xec\x2c\xeb\x29\xf6\x0f\x83\x18\xaa\x58\x3b\xe1\x84\x5c\xc4\x51\xa4\x33\x3b\x45\x49\x18\x3a\x4f\xb5\xa7\x56\x19\x35\x21\x1c\xba\x15\xc4\xe1\xad\x4f\xd9\xe0\xd6\x8a\xf5\x54\xf9\x37\xb9\x59\x93\x2b\x98\x91\x26\xad\xc0\xa1\x10\x7f\xce\xa9\xe2\xac\x8e\x68\x94\x19\x3b\xb3\x87\x52\x04\x93\x7c\x28\x80\xca\x02\x31\x96\x6b\x0f\x75\xd4\x0d\x9c\xb7\xb7\x50\xb3\x62\x95\x27\x35\x83\x51\xb9\x4a\x2f\x79\xfd\x75\x55\xca\x15\x2b\xeb\x9b\xaf\xb5\xfc\x6a\x52\xa3\x78\x21\xe3\xba\x58\xe5\x23\x18\xbd\x17\xf5\x08\xb6\xdb\x50\x65\x04\x98\xf7\xf0\x0c\x74\x95\xc1\xf3\x78\xd6\x46\xeb\xbd\xc6\xc9\x53\x6c\x86\xa9\xa3\x4c\x01\xa7\xca\x91\x83\xdd\xf1\xdf\x80\x1d\x49\xaf\x41\x50\xcb\x70\x20\xd1\x31\xec\xb4\xb9\xa1\x93\x3e\x43\x73\x2a\xa1\x23\x9e\xc3\x7e\x57\x8c\x06\x68\x93\x1e\x86\xad\x79\x5b\xbf\xfd\x89\x7e\x6a\xe0\xd3\x1e\xe0\x8e\xb2\x35\xf3\x7b\x12\x2c\x5e\x19\x6e\x06\x8a\x09\xd6\xd3\x85\x98\x20\x38\x16\xa4\x9f\x4e\xa7\x43\xb6\xb4\xcf\x9b\x5a\x37\xd4\x78\xac\x5f\x57\xea\x27\x28\x24\x82\x87\xad\x27\xc6\x6b\x9d\xf2\x2a\xa5\x41\x96\x99\xcb\x20\x9c\x9e\x42\x7b\x01\xc9\xc5\xe0\x12\xf6\xed\xe6\x38\xb1\x9a\xfc\x72\xc3\x5b\x35\x10\x9f\xae\x4b\x74\xb4\xbe\xa7\xf6\x6c\xc9\x47\x30\xbc\x63\x12\xbe\x77\xc9\xd8\xea\x55\xce\x37\x6c\x60\x69\x76\x23\x92\x82\xa7\xff\xb2\xd3\x14\x0f\x7d\x95\x09\xe7\xf9\xfb\xd3\x0f\x32\xbd\x04\x80\xea\x46\xa4\xf1\xf9\xef\xbf\xac\x6b\x76\xed\x7b\x4b\x22\x8c\xee\x8d\x8a\x64\xf5\x85\xd8\x7f\xd1\xbe\x04\xf3\xbd\xab\x84\xd7\x5c\x2c\xd4\x58\xe5\xce\x4b\x97\x89\xb0\xce\xc2\xf7\x04\xbb\xae\xdf\x9f\x6a\xec\xa8\xce\xe2\xfb\x5e\x9e\x54\xf5\x6f\x15\x43\x04\xda\xdb\xeb\x27\x0d\x31\x2a\x6a\xf9\xc4\x04\xe2\x5c\xcf\x22\x29\x1a\xd1\x00\xf4\xc9\xc9\x02\x60\x19\xa1\x82\x8c\xf0\x98\xc8\xce\x59\x52\x49\x61\x15\x5f\x96\xbe\xef\x5d\x29\x9f\xd9\xec\x43\xbb\x18\x05\x3d\x3f\x7b\xa3\x23\x69\x60\x24\xd7\xe2\x7a\xd8\xab\x56\x8d\xde\xf6\x6a\x0c\x55\x05\xd3\xd8\x40\x9c\x82\xfe\xe4\x26\x32\xca\x1d\xef\x92\x16\x64\x7d\x04\xff\x25\x2c\x5a\xfc\x9c\x42\xd6\x41\xc2\xaa\x53\xd0\xe8\xdf\xdf\xc7\x82\x06\xe6\x14\xec\xe7\x2e\x1b\x3a\x7a\x1d\xf4\x2a\xfa\x5f\x42\x63\x07\xe2\x14\xba\x43\x2e\x52\x1f\xd9\x55\x0b\x4c\x80\x56\x6b\x2c\x35\x02\x89\x9b\x57\x10\xc7\x71\x0f\x52\x21\x04\x5d\x0f\x62\xbd\x07\x1e\xa8\xf1\x22\xb1\x35\x03\xb1\x34\x42\x9f\xa0\xb9\x94\x6b\x16\xe9\xd1\x89\x75\x16\xea\x9b\x1a\x35\x76\x3d\xd1\x86\x7d\xc9\x82\x41\xeb\xc6\xab\x48\xd7\xc0\x27\x3b\x0b\x5a\x66\xae\xe6\x6f\x7d\xaa\xc1\x7f\x8d\x40\x2a\x6c\xcb\x44\x2c\x98\x25\x5b\x61\x2b\x83\x34\xa4\x79\x7c\x0e\x5f\x6d\x81\x2a\x8d\x15\x8a\x94\xa7\x04\x4e\x4b\x40\xf8\x7c\xa0\x7c\x86\x37\x9e\x0f\x4c\x96\x72\xcb\xb3\x09\x74\xf2\x4e\x5d\x09\x9b\xc0\xbc\xa8\xe3\x4f\x2b\x95\x43\xcc\x83\x51\x2a\xd7\x79\x06\x42\xd6\x80\xf6\x0d\x2b\xbd\xd1\x04\x7e\xdc\xd0\x15\x4a\xb8\x25\xfc\x16\x12\xd2\xb8\x64\x49\xf6\x41\xca\x95\x2e\xe5\xb9\x8a\x69\xcf\x01\x38\xd1\x8e\x9b\xd9\x5b\xbd\xc0\x18\x73\x7b\xfa\x92\x25\x79\xbd\x7c\xb3\x64\xe9\xa5\xb3\x40\xd3\x96\x76\x2a\x7e\xbb\xda\x79\xce\x0a\x59\xb3\x57\x59\xa6\xb2\x51\xa5\x5f\xea\xa3\xa3\xd4\x9a\x9d\xee\xb4\x7d\xe0\x3a\xc8\x2b\x40\x73\x4a\x2c\xbd\x95\x4a\x74\x27\x53\xb7\x1d\xa0\xd3\x00\x12\xea\x59\xad\x63\x63\xa7\xad\x44\x5f\x91\x5b\x61\x57\x4c\x64\x81\x5a\xb4\x2b\x5f\x2f\x8d\xd5\x43\x25\x88\xe6\x96\x03\xef\x33\x7c\xcf\xab\x69\xb9\xe3\x11\x88\xc9\x3b\x76\x4a\x37\x30\x5a\x05\xb3\x58\x9d\xed\x1f\x8b\xe0\xe8\xf0\x10\x81\x1a\xd7\x6a\x7d\x15\xd5\x4e\x83\x3a\x84\x87\x10\xfc\x74\x08\x07\xc0\x43\x18\x83\x9e\xbf\x55\x3b\xab\xe9\x9f\x72\xc6\x56\x41\xdd\x3e\x58\xee\xb2\x73\x47\xb8\x18\xe0\x15\x32\x08\xe5\x23\xbb\x52\xb1\xa3\x0c\xac\x72\x84\x58\xc2\x63\x25\xd4\xf1\xa7\x1a\xb5\x81\x04\x40\xe6\x53\xc7\x6f\xa8\x23\x21\xa9\xea\x57\x69\xca\x56\x35\xcb\x54\x74\xb4\xf0\xe4\x55\x10\x2a\x0d\x08\x1e\xb9\x10\x3d\x52\x82\x26\x5e\xc6\xe7\xea\x27\xe6\xac\xec\x7a\xc5\x4b\x96\x11\x37\x75\xb4\x8d\x5f\xb3\xb9\x2c\x59\xd0\xd9\xa6\x1f\xd2\x6f\x22\x27\x58\x5a\xb0\x1a\x9e\x23\xc0\xb6\x6d\xba\xc7\x4e\x6b\x98\xa3\x06\x2a\x52\x92\x81\x5c\xd7\xa3\x6d\x57\xee\xfb\x99\xdd\x58\xa8\x29\x56\x06\xe8\x25\x52\xc6\x37\x2c\xb3\xad\x45\x14\xea\x3d\x39\x9f\x47\x50\x70\xa1\xb2\x5a\x6c\x87\x99\xc2\x61\x04\xc7\x3f\x3d\xd1\x77\xc2\xd3\x76\xf3\xca\x61\x04\x3f\x1d\x1d\x87\xbe\xa7\x08\x4d\xeb\xeb\x08\xd2\x44\xa4\x2c\x47\xc6\xe9\x46\x9f\xdf\x79\xbd\x7c\x83\xa3\x81\x19\x7a\x9d\xa4\x97\x8b\x52\xae\x45\x16\x60\x63\xc0\x78\x0c\x97\x3c\xcf\x61\x96\x64\xd0\xd0\x5c\x19\xa9\x63\x08\xd2\x21\x87\x00\x69\x7b\x51\xf3\x95\x0a\xb3\x54\x6e\x58\x19\x84\xcf\x71\x64\xd7\x58\xda\xbc\x76\x6b\x00\xfd\x4e\x70\x2d\x28\x10\x64\xfa\x18\xc7\x85\xc3\x46\xed\x09\x67\x49\x16\x6e\xb5\xf6\x6f\xad\x46\xea\x0b\x77\x35\x1b\xe6\xa5\x2c\xa0\x5e\x32\x87\x24\x42\x5b\xce\xe7\xba\x09\x26\xb0\xb7\xf4\x9e\xbd\x29\xff\x32\x39\xbc\x50\x03\x6a\x16\x96\x24\xc8\xb4\xf9\x1c\xe6\x25\x43\xad\x4e\x93\x15\x2d\x7c\x64\x61\x3c\xa7\x87\x2f\xac\xec\x10\xe6\x78\x8c\x9e\xbc\x7d\xf5\xaf\xbe\x67\xea\xa9\x60\x57\xaf\xe9\x9a\x1f\xef\xe7\x0d\x6a\x07\x7d\x90\x7a\x41\xad\x2b\xe5\xfc\x66\x6c\xc1\x85\x50\x9f\xe4\x5c\x41\x9a\xb3\xf2\xb9\x59\x92\x61\x05\x49\x8f\x82\x69\x74\xc2\xa7\x7a\xf7\xdd\x1e\x03\xdd\x61\xa0\xb7\x0f\xed\x7d\x2e\x36\x1a\xd0\xaa\x08\xf9\x24\xe7\xf3\x09\xb6\x19\x68\xde\xd1\xb3\x2f\x13\xc3\x93\x47\x72\x3e\xef\xe3\x64\xd1\x8d\xaa\x6a\x1f\xb5\xe2\x8b\x59\x39\x31\x78\x20\xf8\x46\x32\x87\x30\xb1\x1c\x3f\x28\x2e\x1a\xa7\xed\x9e\xe5\xac\xd6\x09\x9e\x77\x4c\x15\x58\x5e\x31\xd8\xbd\xf2\xfa\x4e\x35\x25\xe5\xd4\x9d\x6a\xa4\x6e\x8e\xc7\xe8\x53\x5a\x0c\xdf\x3d\x71\xc3\xa8\xae\x92\x59\xaa\xfc\x32\x96\x1f\x56\x25\x2b\x92\x59\xce\xb4\x6e\xfc\xb0\xe3\x34\x48\x35\x74\x6f\x57\x23\x12\xa3\xdc\x6e\x9e\xa2\xe7\xa2\xd5\xde\xd4\xac\x8a\xdf\xfe\xb1\x4e\x72\x77\x4a\x23\x54\xa5\x84\xdd\xf5\x17\x16\x02\x8a\xf3\x60\x77\x07\xfd\x74\x07\xc9\x29\xe6\x7c\xf4\x54\x4b\xc0\x40\xea\x63\x7b\xab\xbe\xd7\xb8\xe2\x8c\x53\x56\xa4\xc1\x2b\x8f\x4e\x07\x25\xaa\x4d\x1c\xdb\x44\x49\xfb\x67\x97\xc5\x46\x83\x3b\xdb\xcf\x4a\x96\x5c\xfa\xf6\x29\x0a\x42\x09\x60\x95\x94\x95\x6d\x64\xac\xb0\x11\xa3\x5a\x98\xce\x36\xbc\xad\xec\xb6\xef\xb5\xad\x81\xcf\xa1\xa8\x16\x2d\xfd\xf2\x44\x3b\x1a\xfa\x44\x7d\x27\x6a\xd9\xf0\xa7\x9e\x99\x33\xe6\x14\x44\xff\x6c\x37\xc4\xb9\x42\xa1\xf6\xbb\x76\x3e\xb3\x90\xb5\x6d\x96\x54\x51\xa2\xa8\xfa\x32\x9b\x6e\x6e\xd3\x62\x21\xf1\xc8\x65\xa0\xe5\xdf\xf6\x1e\x61\xb0\x8d\x41\x4f\x17\x6a\xb5\x70\xef\xfc\x4c\xe9\xf5\xb6\xd5\xec\xdb\xdc\x17\x57\x8b\xfb\xb6\x5e\xdc\x4b\xbb\x9a\xac\x1b\x23\x87\xe9\x20\xc5\x8a\x88\x9c\x03\x17\xa9\x2c\x94\x8d\xeb\x07\x23\x9d\x82\xeb\x72\x9f\x83\xa1\xbd\x58\xec\xed\x77\x9e\x60\x04\xcd\xf3\xf7\xa7\x7b\x28\xe9\x21\xe5\xaf\xd0\x42\xfb\x91\x77\xa2\x56\x5f\x1c\x1a\x69\xa1\x79\x2b\x0d\xe5\xdf\x89\x53\xb3\xe7\x30\x5e\xfa\x28\x18\xc1\x5c\xe5\x29\xa4\xc6\xe6\x78\xf8\xa5\x01\xa0\x83\xc0\x0f\x34\x0b\x11\xd3\x54\xdc\x07\xb1\x4e\xd6\x41\x77\xd2\x06\xf8\x04\x7e\xcc\x46\x91\x83\x6c\x48\x2e\xa2\x64\xab\xfc\xe6\xee\x33\x07\xcd\x1b\x3a\x75\xb8\x9d\xee\x03\xb3\x49\x72\x03\x0f\x59\x59\xc6\xba\x6e\x1f\x6a\xa2\xe3\xa6\x08\x8f\xf3\x43\x8a\x6c\x78\x96\xd1\x03\x8e\xdc\xa8\x3b\x4f\x71\xda\x34\x80\xff\xfb\xe4\x6f\x5b\xce\x07\xa4\x4f\xa7\x50\x27\xed\xf4\x4a\x56\xad\x73\x3c\xa2\x68\x1d\x88\x9d\x9e\xf6\xa6\x87\x9d\x3c\x9b\x76\xc2\x7a\x4d\xcb\xc3\xdd\x57\x76\xdf\x28\xbc\xfd\xd2\xeb\x79\x4a\xb8\xb5\x24\xe8\x35\x63\x3b\x52\xdc\x3d\x9c\xd2\xb3\x7b\xf8\xf0\xad\xf5\xd0\x18\x2a\xfa\x9d\x13\x91\xf2\xff\xc4\x3d\x11\xb4\x46\x15\xd2\xb8\xa9\x04\x3b\x67\xc4\x74\xd9\xf2\x0d\x6e\x25\xe8\x0b\x2d\xb8\xd8\x59\x6c\x63\xe6\x8e\xd3\xf8\x06\x12\x5a\x4e\xc3\xe2\xac\xdf\x97\x31\xe9\x0f\x26\x70\xc6\xa3\x28\x14\x74\x06\xa8\xd5\xa2\x21\x6e\x09\x2f\x1e\x29\x36\xef\x8a\xe6\x8c\x8b\xc5\xa4\xcf\x14\xfe\x06\xf7\x73\x26\x85\xb5\x93\x7b\x2a\x56\x5b\xaf\x8c\x46\xed\x62\x2d\x11\x6b\xa7\x6d\xec\x8e\x5a\x51\x92\xfe\xb1\xe6\x25\x53\x82\xfb\x94\xcb\x56\x87\x60\xbb\xbc\xe8\x4a\xd2\x68\x01\x1d\x50\x5b\x8f\x9c\xbc\x68\x3c\x06\xac\x72\xa8\x94\x3f\x11\x37\x50\xe5\xb2\xae\x80\x5d\xf3\xaa\xb6\x2f\x55\xb4\x35\x07\x73\x67\xf7\x35\xa6\xc7\xc7\x9d\xa6\xb8\x7b\x1c\x12\x46\x42\x1a\xbd\xa6\x1d\x93\x4d\xc2\xf3\x04\x93\x53\xe2\xcc\x78\x0c\xef\xb8\xc8\x20\xc1\x09\x54\x16\x10\xe6\xe6\xc1\xab\x93\x4b\x46\x09\x23\x26\xce\x4a\x93\x68\x48\x61\x22\x60\x0a\xf4\x32\x57\xfc\x2a\xcb\x74\x97\xe6\x83\x34\xa6\x3b\x8c\x08\x8e\x42\x6a\x17\xa2\x15\x3b\x96\xa1\xaf\xf7\x44\x78\x61\x31\xf9\x9c\x5c\x32\x3c\x27\x13\x2e\x83\x0b\x60\x4a\xad\xbb\x9a\x17\xf6\xc1\x9d\xd5\xc0\x64\x96\x88\x4c\x0a\x2b\x61\xcd\x1b\xa7\x69\xff\x3b\x64\xcb\xe7\x86\xc7\x2f\xfb\x04\xa6\xfb\xcc\x92\xba\x66\xc5\xaa\xd6\x0d\xf6\x84\x07\x70\xb1\x49\x72\x6e\x7c\xcf\x48\xd7\x7b\x37\x11\xc8\xcb\x7d\xbe\x44\x79\x0c\x79\x79\x27\x74\x3c\xbe\xab\x45\xc8\xcf\x91\x2d\xb5\x6e\x5c\x73\xda\x07\x60\x5d\xb1\x6c\x07\x40\xc6\x72\x56\xb3\x8e\xb6\x5a\x77\xb2\xbf\x00\x95\xb3\xa4\x62\xff\xe7\xdc\xd7\x78\xfc\x43\xdc\x37\xd0\x87\xb9\x3f\xdd\xcf\x7d\x03\x60\x2d\x7a\xf9\x9f\xe6\xb2\xa2\x37\x77\xbe\x5f\x12\xe9\xe0\x3b\x78\x0a\xd4\x3b\x59\x9e\xa3\x6b\xa7\x7e\x73\x27\x47\xb6\x2f\xe6\x75\xdf\xd4\x53\x00\x5f\x95\x8b\xca\x79\x4d\xcf\xf1\x9e\xcd\x7b\x64\x6d\x3f\xda\x8e\xf0\x69\xbc\xe3\x80\xf7\x77\x05\xe3\xcd\x86\x6d\x0d\x2e\xee\x8c\x44\xc5\xfe\x2c\x4a\x6d\xbb\x33\xcb\x26\x4f\xed\x61\x27\x15\xdf\x85\x4b\xbc\xd1\xca\x69\x88\xd3\x0c\x72\x92\xaa\x62\x37\xb6\xa5\x71\xbf\x87\x0a\x77\xe9\xfe\xf6\x4a\xa6\x72\xfb\x4a\xbf\xf0\x9d\x5e\xe6\x26\xbb\x90\x94\x8b\x75\xc1\x44\x5d\xed\x5e\xee\x28\x6d\x6f\x29\xc5\x37\xe2\xa9\x83\x79\x11\x5a\x2f\x5f\xb1\x7a\xbd\xa2\x72\x28\xee\x2d\x32\xac\x47\x94\xbe\x4a\x41\xf4\xab\x46\x41\xeb\xc2\x8c\x62\x49\xaf\x73\xe8\x37\x52\x15\x6d\x96\x9d\x15\xed\x68\xac\x90\x6a\x70\x90\x1b\x56\x2a\xd6\xa8\x01\x59\x2f\x59\x59\xf1\x8c\xf9\x9e\x9a\xf4\xb6\x95\x93\x14\xa4\x92\xe6\xc1\xb0\x5a\xea\x19\x96\x68\x85\x25\x66\x62\x6a\x0b\xcc\x6c\x14\xf8\x9c\x51\x4f\x03\xa5\x2e\x15\xde\x1f\xbd\x78\x94\x2e\x31\xff\x8d\xfb\xfd\x25\x9e\x9d\x28\x43\xff\x8c\x3d\x1d\xdf\x98\x22\xa7\xf1\x1b\xf4\x20\x61\xfb\x05\x9e\xef\x52\x2a\xaa\x3b\x5e\x2d\x79\xce\x20\x63\xf4\xaa\x78\xab\x66\xd1\xd6\x27\xcc\xd5\xf4\x96\x6d\x0a\xb0\xae\x85\x31\x1d\x59\xf1\xe2\x51\x5a\x5f\xc7\xa7\x52\xb0\x00\x3b\x78\xc6\x63\xf8\x9d\xfd\x47\xc9\xf4\xa5\x42\xce\xb2\x18\x3e\xb0\x1a\x12\x58\xc8\x52\xae\x6b\x2e\x18\x14\x89\x50\xbb\xa6\x39\x4b\xc4\x7a\x05\x72\x6e\xc5\xfb\x48\x79\xcf\x78\x37\x7f\x55\x9c\x26\x8e\x0c\x71\xda\x9c\x55\x30\x39\xf9\xf5\xf4\xd7\xe0\x32\x0f\x27\xf0\x69\x89\x27\x87\x2b\x46\x5a\x94\xc0\x92\x8b\xda\xa8\x4f\xc5\xca\x0d\x2b\x23\xf5\x35\x67\x35\xf0\x5a\xe3\x4c\x40\xe4\x8a\xd1\x3d\x1a\x48\x01\xf5\x92\x57\x50\xd2\xfb\xee\xff\xd9\xf4\x6c\x29\xd2\xdf\x96\xa5\xbd\xe7\xa8\x98\x75\xd3\xa7\x2c\xc9\x72\x2e\xd8\xdb\xeb\x14\x5f\xbb\x9b\xdc\x29\xc3\xfe\xeb\x24\xd7\xf6\x9d\xfb\xa4\xee\x76\x74\x59\x73\x9f\x6d\xfa\xb3\x4f\x77\x1b\x2b\x39\xdc\xc6\xe9\xc3\xff\xeb\x8e\xcd\x1c\x6d\x70\x03\xe2\x6e\x89\x6d\x2a\x13\xf8\xf1\xa0\xa3\x7e\xf7\xbd\x8e\x0c\xda\xa5\xbf\xe1\x1b\x42\x9b\x9d\x0c\xdd\xfb\xa1\x07\xb5\xcf\xf5\xd5\x1f\xde\xc5\x36\xed\x34\xae\x7d\x92\xc9\x36\x49\x88\x9d\x15\x07\x36\x7a\x3e\x07\x9d\x80\x74\x8a\x28\xad\xf7\xdd\xee\xc1\x48\x17\xba\x6e\xd9\xdc\xfa\xed\xe2\x6a\x2f\xb0\xa1\x06\x82\x91\x3a\x4d\x5b\x4a\x47\xdb\x9e\xb7\xaf\xf7\xf1\x9f\x5c\xec\x60\xfd\xd5\x3d\x21\xb6\x44\x35\xd4\xfa\x60\xde\x72\xc3\x7b\x06\xe3\x21\xf5\x5b\xde\x3e\xc6\x0e\xd3\xb9\x64\xe3\xc9\x40\xa3\x05\x42\x08\xdb\x4b\xda\x49\xe8\x4e\x24\x6f\xbc\xec\x37\xb1\x70\xd0\xbf\xaa\x8d\x1d\xf7\xda\x8d\xd4\xf7\x64\xb1\xc6\x8a\x74\xda\xde\x4d\xed\x59\xa0\x8f\xda\x3b\x27\xe0\xfe\x0b\x83\x01\x6b\x18\x64\xd5\x83\x07\x2d\x3b\x98\xba\x0c\x74\x86\x9b\x2c\x0f\x0d\xa7\x6d\x4b\xee\x77\xfd\x0a\x84\x1d\x75\xa4\xa0\xab\x33\x6e\xb3\x16\x19\x62\xf7\x9e\xb8\xd3\xce\x45\x2f\x89\x7a\x59\x90\x12\xb7\xef\xe1\x47\x2a\x56\x9b\x6e\xb3\x9e\xe4\x59\xd7\x0d\x3b\x7f\x27\x43\xf3\xb5\xaf\xb0\x0c\xb6\xd6\xd8\xfc\xdd\x06\x7b\x55\x2a\xe8\xfd\xef\xe6\x6f\x16\x8c\xc7\xf0\x9e\x62\x1f\xfe\x35\x88\x79\xc2\xd5\xa1\x60\xc1\x37\x0c\x12\x20\x57\x89\x6a\x15\xf7\x5c\xaa\x63\xad\x52\x5f\xa1\xb7\xb8\x42\xe7\x14\x7d\x5f\x57\x96\x9f\xa5\xfc\x90\x94\x0b\xe6\xdc\x7a\x37\xaf\xe6\x39\x5d\x01\x62\xaf\x6a\x11\x51\x67\xd4\x8e\x6a\xfe\xce\x4b\xd0\x24\x06\xcd\x71\xa3\xe5\x12\xac\x1b\x8c\x5a\x2f\xc1\x38\x9d\xb0\x0d\x08\x22\x6b\x93\x94\x50\xda\x86\xf8\x56\x87\x0d\x96\x6f\x4d\xd7\x76\xef\x5d\xd4\xfd\xbd\xe9\x40\xfb\x14\x26\x46\x4c\x27\x3c\xae\xd9\x46\xe6\x3e\x72\xeb\x3a\x09\x33\xda\xf9\x9b\x15\xa4\xd7\x5b\xff\x7f\x03\x00\x00\xff\xff\xf0\xa2\x94\xc6\xcd\x47\x00\x00")

func templatesGoPbRpckit_boilerplateGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesGoPbRpckit_boilerplateGoTmpl,
		"templates/go-pb/rpckit_boilerplate.go.tmpl",
	)
}

func templatesGoPbRpckit_boilerplateGoTmpl() (*asset, error) {
	bytes, err := templatesGoPbRpckit_boilerplateGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go-pb/rpckit_boilerplate.go.tmpl", size: 18381, mode: os.FileMode(436), modTime: time.Unix(1538749976, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGoPbRpckit_client_definitionGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\xcd\x31\x0a\x02\x31\x10\x85\xe1\x7a\xe7\x14\xaf\x12\x5d\xd0\x4a\x2c\x6c\x53\xbb\x2c\xde\x20\x8c\x23\x06\xd6\xc9\x12\x27\x88\x0e\xb9\xbb\xbd\x4d\xfa\xef\xbd\xdf\x3e\xab\xc0\x1d\x1c\xd7\x64\x71\x49\x5f\xc1\x61\x2e\xd9\xf2\x14\x9f\x82\xd6\x2e\x62\x8f\x7c\x43\x4d\x6a\xa7\x23\x51\x8f\x87\x25\x89\x1a\x5e\x56\x2a\x1b\x9c\x06\xc6\x78\x9d\x43\xc8\xaa\xc2\x96\xb2\x52\x23\xba\x57\x65\x4c\xf2\xee\xfe\x6c\xff\xd7\x3b\x8c\xfd\xb8\xd3\x50\xc4\x6a\x51\x6c\xe0\xbe\xef\x70\xe7\x33\xb8\x51\xa3\x5f\x00\x00\x00\xff\xff\xa6\xec\x8b\xe9\x0a\x01\x00\x00")

func templatesGoPbRpckit_client_definitionGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesGoPbRpckit_client_definitionGoTmpl,
		"templates/go-pb/rpckit_client_definition.go.tmpl",
	)
}

func templatesGoPbRpckit_client_definitionGoTmpl() (*asset, error) {
	bytes, err := templatesGoPbRpckit_client_definitionGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go-pb/rpckit_client_definition.go.tmpl", size: 266, mode: os.FileMode(436), modTime: time.Unix(1538742096, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGoPbRpckit_client_methodGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x54\x4d\x8f\xd3\x30\x10\xbd\xef\xaf\x98\xad\xd4\x55\x02\x21\x27\xc4\x21\xab\x9e\xda\x6a\xd5\x03\x50\x95\x3d\x22\xad\x82\x33\x69\x2d\x5c\x3b\x4c\x26\xa5\x10\xe5\xbf\x23\x3b\x6e\xe3\xb6\xb0\xac\x28\xb9\x24\x9e\x8f\x37\x99\xf7\xc6\x53\x36\x5a\x40\x24\xe0\x55\xdb\x82\xc8\x2b\xc9\xb9\x92\x3f\x11\xd2\x25\x19\x36\x1f\xf2\x2d\x42\xd7\x4d\x95\x44\xcd\x31\xb4\x2d\xa4\xde\x14\xdd\x00\x00\x08\xde\x83\x30\x9a\x71\xcf\xe9\xb4\x7f\x27\xce\xd1\xb6\x6f\x80\x72\xbd\x46\x48\x17\xba\x6a\x18\xba\xce\xd9\xed\xf3\x14\xc0\x38\xc8\xc7\xf4\xc1\x3c\xfe\xa8\xec\x79\xc8\x46\x5d\x1c\x92\x62\x88\xce\x41\x3f\x36\x7c\x2d\xaa\x7d\x90\x08\x56\xcb\xe9\x9c\xc8\x50\xe2\x6b\xb5\x37\xee\x83\xb0\x6e\x14\x5b\x80\xc5\x2c\x81\x6d\xbd\x4e\x5c\x74\x36\x01\x91\x8a\x54\xe4\x4a\x45\x82\xf7\x09\x30\x35\x98\xb8\x82\x8e\xb1\xc5\xcc\xd6\x83\x46\x6a\x7e\xf7\x36\x7a\x86\xd3\xf7\xc8\x1b\x53\x3c\x9d\x45\x78\x67\x9c\xc0\x1d\xe1\xb7\x06\x6b\x3e\x8f\x08\x31\xfe\x90\xdd\x1e\xfb\x7b\xa9\x0c\xd9\xc9\x29\x39\xc9\x0f\x28\xeb\xe2\x9e\x1b\x59\x3a\x2e\x6e\x27\xa0\xa5\x82\xa1\x9c\x2c\x81\x2a\x31\x27\x4a\xc0\x7c\xb5\x54\x21\x51\x1a\x1d\x08\x8e\xef\xad\x75\x88\x3e\x08\x30\xf1\x49\x47\x47\x07\xa8\x6a\xfc\x6d\xe4\x5d\x1f\x6a\xa8\x95\x45\x06\x0f\xa8\x91\x64\x6f\x70\xf2\x18\xca\xa0\xdc\x72\xfa\xa9\x22\xa9\xb9\x8c\x46\x56\x27\x28\x73\xa9\xb0\xc8\x60\xfc\x7a\xf7\x59\x8f\x5c\x60\xea\x72\xa2\x38\x1e\xf8\x18\xbe\x08\xb9\x21\xdd\x77\xdc\x37\x5c\x7f\x97\x2c\x36\x27\x33\xe1\x7f\x4f\xe4\x35\x5e\xad\x76\x76\x2c\xbd\xcb\x09\xc8\xd6\xa9\x8c\xae\xf1\x1f\xb4\x0f\xb5\x28\x50\x98\x02\xe7\xfd\xd4\x52\xba\x5a\x4e\x67\xce\x12\x6d\xeb\x75\x7c\x1f\xb8\x2f\x84\xbc\x82\x70\xd3\xa8\x02\xb4\x61\x0f\xef\x39\xcb\x60\xbc\x1b\x25\x43\xc9\x80\xf7\x33\xc6\x4f\xa5\x78\xf9\x95\xb7\x1d\x86\x86\xf3\x19\xf6\x96\x02\xcb\xdc\xfe\xcf\x09\xe3\xb2\x5e\x92\xdc\xe5\x8c\xf0\xc5\x18\x15\x6e\x87\x24\xf0\xf5\x37\x7f\x93\xeb\x42\xa1\xb7\xad\xbc\x50\xd1\xc5\xb6\x88\x43\x21\x6e\x07\x90\xbf\x73\xec\x44\x16\x46\x3d\x43\x72\xa3\x71\x5f\xa1\x60\x2c\x3c\x73\xc0\x76\xd1\x95\x86\xc0\x0d\xbc\x3b\x8d\xed\xc4\x17\xa3\xff\xb1\x8b\xc2\xee\x2e\x6e\x4c\x77\xd8\x97\x4e\xc2\xee\xe6\x57\x00\x00\x00\xff\xff\x41\x0a\x83\x8b\x51\x06\x00\x00")

func templatesGoPbRpckit_client_methodGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesGoPbRpckit_client_methodGoTmpl,
		"templates/go-pb/rpckit_client_method.go.tmpl",
	)
}

func templatesGoPbRpckit_client_methodGoTmpl() (*asset, error) {
	bytes, err := templatesGoPbRpckit_client_methodGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go-pb/rpckit_client_method.go.tmpl", size: 1617, mode: os.FileMode(436), modTime: time.Unix(1538749183, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGoPbRpckit_property_to_wiretypeGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xcd\xc1\x0a\x82\x40\x10\xc6\xf1\xbb\x4f\x31\xec\xdd\x0e\x25\x3e\x40\x48\x10\x74\x2b\xba\x2b\x4e\x36\xb4\xcd\x6c\xd3\x88\xc8\xb2\xef\x1e\xd2\x21\x04\x8b\xee\xbf\xef\xff\xc5\x98\x03\x5d\x00\x1f\xb0\x02\x77\x34\x25\xee\x1c\xe4\x29\x0d\xa4\x78\x1a\x03\x1e\x90\x3b\xbb\x56\xe8\xe9\x4e\x86\x6d\x36\x79\xf4\x4f\xfc\x8c\xb6\x22\x7e\x36\x39\xd7\x4a\x6c\x0b\x72\xcf\x56\x16\x33\x5a\x16\x0d\x7d\x91\xff\x25\x77\x5e\xea\x39\xdd\xac\x97\x93\x95\xf4\x8d\xc7\x5f\xef\x79\x4a\x31\x02\xaa\x8a\x82\xeb\xf9\xc6\x32\x30\x04\x95\x80\x6a\x23\xd8\x18\xd0\x41\x4a\x6f\xcf\xed\xc4\xb3\x57\x00\x00\x00\xff\xff\x94\xf7\xd7\x4d\x3e\x01\x00\x00")

func templatesGoPbRpckit_property_to_wiretypeGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesGoPbRpckit_property_to_wiretypeGoTmpl,
		"templates/go-pb/rpckit_property_to_wiretype.go.tmpl",
	)
}

func templatesGoPbRpckit_property_to_wiretypeGoTmpl() (*asset, error) {
	bytes, err := templatesGoPbRpckit_property_to_wiretypeGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go-pb/rpckit_property_to_wiretype.go.tmpl", size: 318, mode: os.FileMode(436), modTime: time.Unix(1538739817, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGoPbRpckit_rpccallGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x94\xcd\x8e\x9b\x30\x10\xc7\xef\x79\x8a\x69\xd4\xad\xcc\x8a\xe5\x54\xf5\xc0\x2a\x87\x2a\xdb\x8f\x1c\xd2\x46\xdb\x07\x88\x5c\x33\x64\xd1\x82\x4d\xc7\x66\x37\x2a\xf2\xbb\x57\xb6\x09\x31\xd9\x64\xab\x96\x0b\x30\x5f\x9e\xf9\xfd\x07\xca\x4e\x0a\x60\x1a\xae\x05\xaf\xeb\xaf\x5c\x16\x35\xd2\x67\x45\x7d\x0f\x82\xb7\x95\xe1\x75\xf5\x1b\x21\xdb\x90\x32\xea\x1b\x6f\x10\xac\x4d\xe0\x7e\xb3\x5c\xf2\xba\x66\xc2\xec\x41\x28\x69\x70\x6f\xb2\x65\xb8\xa7\xd0\xa0\x79\x50\xc5\xea\x0e\xba\x4a\x9a\x0f\xef\x53\x68\xe0\xba\x41\xad\xf9\x0e\x13\x60\x84\xba\x05\x6a\xc5\xfa\x60\xe9\x67\x00\x00\x05\x96\x48\xe0\x7a\x61\x07\x93\xbb\xaa\x12\x08\xf2\x05\x10\x0a\xf5\x84\xc4\x92\x5b\x20\x78\xb3\x00\x59\xd5\x51\x94\xbb\x7c\xdd\x05\xbc\xa3\x56\x7c\x22\x52\xd4\x57\x45\x0e\x1f\xdb\xb6\xae\x04\x37\x95\x92\xde\x98\x02\xba\x5b\x0e\xf3\x4e\x3e\x4a\xf5\x2c\xc3\x3b\x28\x21\x3a\x22\x2c\xe6\x76\xac\x19\x9e\x2c\x4b\x66\xfe\xa1\xef\xe1\x6d\x3b\x32\xc8\x17\x31\x91\x1b\x1b\x82\xf5\x73\x65\xc4\xc3\x71\xfe\x7e\xc8\xbc\x01\xe2\x72\x87\x90\xad\xbd\x47\xc3\x10\x2f\xb8\xc6\x01\x12\x9b\xe2\x8e\x8e\xb2\x36\x64\x6d\x4f\x04\x39\x68\x91\x8f\x1d\x73\xda\xe9\xc0\xea\x57\x87\xda\x6c\x5f\x29\x79\xa1\x58\x6f\x63\xf0\x48\x1e\xbd\x2b\x9b\xdd\x6f\x96\x77\x28\x54\x81\xac\x49\x6e\xbd\xe7\x82\x08\xa6\x23\x79\x22\x82\x07\x25\x54\x3d\x55\xa0\x6c\x4c\xf6\xa3\xa5\x4a\x9a\x92\xcd\x3b\xc9\x7f\xd6\x08\x46\x41\xe1\x4f\x19\x18\x82\x5b\xc9\x1c\xae\x9e\xe6\x3e\x2d\x39\x55\x67\x10\x66\xa0\xfb\xbd\x33\x6d\x67\xdc\x18\xfd\x71\xa2\x1e\x50\x16\x60\x6d\x7a\x18\x47\x67\xa1\xb6\xce\xa2\x30\x36\x99\x42\x98\x7d\x3a\x31\x44\x12\xae\x64\x38\x63\xe2\xf7\x88\xb6\x51\xbd\x97\xe9\xa1\x8b\xd1\x9c\x9c\x82\x3e\x8b\xd3\x6d\x7f\x2b\xd6\x7a\x97\x82\x7a\x74\xcd\x23\x51\xc6\xa2\x8f\xe7\xd6\xd9\xa7\x39\x91\x0c\x21\x77\xe2\xb5\x7f\x97\xeb\xe2\x37\xe3\x0e\xf7\x16\x76\x56\x88\xb1\x18\xea\x56\x49\x8d\xff\xb3\x7f\x97\xa8\x8f\xd2\x4e\x02\x62\xe2\x39\xfc\x0b\x7e\x3b\x3b\xe3\x28\xb0\xe4\x5d\x6d\xf2\x97\x13\xc5\x78\xbe\xa0\x44\xaa\xc4\xab\xcb\x1c\x7e\x2d\xc3\x0e\xaf\xee\x72\xb8\x2a\xe6\xc7\xff\xe2\x40\xcf\xce\xec\xec\x4f\x00\x00\x00\xff\xff\x61\x0c\x5a\x40\x7c\x05\x00\x00")

func templatesGoPbRpckit_rpccallGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesGoPbRpckit_rpccallGoTmpl,
		"templates/go-pb/rpckit_rpccall.go.tmpl",
	)
}

func templatesGoPbRpckit_rpccallGoTmpl() (*asset, error) {
	bytes, err := templatesGoPbRpckit_rpccallGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go-pb/rpckit_rpccall.go.tmpl", size: 1404, mode: os.FileMode(436), modTime: time.Unix(1538749252, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGoPbRpckit_serializationGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x53\xc1\x6e\xd4\x30\x10\xbd\xe7\x2b\x86\x9e\xe2\xaa\xf8\x02\xe2\x80\xba\x97\xb2\x2d\xea\x01\x58\xb5\x15\x1c\x57\x56\x32\x49\xad\x26\x76\x34\x99\x50\x4a\xf0\xbf\x23\x3b\x26\x71\x50\xb7\x97\xae\x0f\xd1\x68\x66\xfc\xe6\xcd\x7b\x0e\x3f\x75\x08\xe3\x08\x72\x47\x58\xe9\x5f\xe0\xdc\x7e\x1c\xa1\x50\x9d\x66\xd5\xe8\xdf\xe8\x0b\x96\xed\x57\xd5\xe2\x33\xb5\x98\x86\x9e\x69\x28\x18\xc6\x6c\x1c\xdf\x02\x29\x53\x23\xc8\x2b\x8d\x4d\xd9\x83\x73\x19\x00\x80\xbf\x39\xb7\xfb\xf8\x4e\x7e\xb6\x77\x7e\xb8\x73\xe1\x16\x9a\xd2\x87\x2e\xcb\xaa\xc1\x14\x90\xf7\x70\xfa\x5a\x5a\x02\x6e\x76\x9f\xae\xb7\xb9\x80\x41\x1b\xfe\xf0\x1e\xc6\x40\x85\x90\x07\x32\x31\x97\xbf\x00\xfb\x05\xf9\xde\x96\x87\xc0\x8f\x4f\xf5\xd2\x14\xb6\xc4\xbc\x85\xd3\x16\xfb\x5e\xd5\x28\x00\x89\x2c\x45\xde\x07\xb5\x6d\xe5\x0f\xd2\x8c\xbb\x8b\x49\xd7\x5b\x26\x6d\x6a\x70\xce\xef\x26\xaf\xb7\xe0\xdc\x19\xf4\x32\x75\x40\xcc\x80\x51\xf6\x44\x17\xa3\x9b\xe3\xaf\xb6\xc5\x17\x57\xfb\xa9\x08\xf2\x10\xf9\x83\x44\x53\x75\xce\xb0\xaa\xa3\x5f\x21\x35\xd1\xaf\x6c\x68\x83\xcd\xc6\x73\x8e\x48\xb1\xfb\x6c\xaa\x40\x2b\x6f\x50\x95\xdf\x15\x69\xc3\xb9\x98\x3b\xfa\x47\xcd\xc5\x7d\x80\x5d\xae\x1d\xd4\xd7\x9f\x42\xf5\x98\x3c\x99\x49\x56\x38\x3f\x87\x77\x02\xfe\x24\x05\xc6\xb6\x6b\x14\x23\x9c\x50\x57\x3c\x68\xde\x77\x64\x3b\x24\x7e\xda\xb3\xdd\x3f\x6a\x42\xff\xc3\xc9\xda\x4a\x6e\xbb\xe6\x64\xb1\xcb\x39\xf1\x71\x1e\x16\x28\xae\x0c\x5b\xef\xf3\xbf\xcf\x62\xb5\x43\x62\xa9\x3f\x25\x56\x6a\x68\x78\x8d\xae\xab\x00\xf8\x66\x03\xda\xca\xcb\x6f\x57\x89\x0c\xa9\x0b\xff\x06\xee\x2e\x6e\x1f\x74\x97\xb3\xaa\xc5\xaa\x6f\x99\x32\x45\xd3\x37\x82\x6f\x9e\x01\x4f\xde\xd8\xd2\x1f\x93\x48\x94\xb9\xec\x6f\x00\x00\x00\xff\xff\xd7\x99\x33\x52\x91\x04\x00\x00")

func templatesGoPbRpckit_serializationGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesGoPbRpckit_serializationGoTmpl,
		"templates/go-pb/rpckit_serialization.go.tmpl",
	)
}

func templatesGoPbRpckit_serializationGoTmpl() (*asset, error) {
	bytes, err := templatesGoPbRpckit_serializationGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go-pb/rpckit_serialization.go.tmpl", size: 1169, mode: os.FileMode(436), modTime: time.Unix(1538749132, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGoPbRpckit_server_methodGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x92\x41\x6a\xf3\x30\x10\x85\xf7\x3e\xc5\x5b\xfd\xd8\x3f\xa9\x0e\xd0\xad\x4b\xdb\x2c\xda\x86\x90\x0b\x08\x79\x92\x0a\x1c\xc9\x48\x63\x48\x2b\xe6\xee\x45\xb6\x4c\xc1\x8b\x60\xa8\xc1\x48\x68\xde\xfb\x98\x37\x12\x7f\x0d\x84\x94\x60\xf4\x60\x59\xf7\xf6\x9b\xa0\x0e\xc1\xb3\x7f\xd7\x57\x82\xc8\x1b\xf1\xa7\xef\x22\xac\x63\x0a\x67\x6d\x08\xa9\x02\x80\x94\x1e\x10\xb4\xbb\x10\xd4\x22\x11\x29\x15\xa8\x62\xae\xa7\x03\xc3\x37\x18\xef\x98\x6e\xac\xda\x79\xdd\xad\x19\x7b\x37\x8c\xbc\x10\x56\x94\x69\x7f\x52\x2f\xfe\x94\x7b\x15\xf9\x35\x93\xeb\x16\x4f\x83\x7a\xcd\xfc\x18\xf9\x8f\xd0\xfc\x51\x08\xf9\xf7\x61\x56\x34\x6b\x9d\x54\xd5\x79\x74\x06\x47\xba\xd8\xc8\x14\xee\xcc\xf2\x55\xbb\xae\xa7\x50\x1b\xfc\x3f\x1e\xda\xd6\x3b\x47\x86\xad\x77\x3b\xc4\x0d\x57\xd0\x94\xc9\x1b\x15\x89\x17\x54\x4e\x31\x69\xf7\x4f\x39\x04\xfe\x19\xdd\xf7\xa5\xf8\xec\xef\x35\x93\xae\x33\xf6\x11\x51\x9a\x9c\x62\x7a\x09\xdb\xec\x22\x88\x1c\x46\xc3\xa5\xa5\x82\xda\x10\xa2\x92\xea\x27\x00\x00\xff\xff\x95\x7d\xbd\x70\x72\x02\x00\x00")

func templatesGoPbRpckit_server_methodGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesGoPbRpckit_server_methodGoTmpl,
		"templates/go-pb/rpckit_server_method.go.tmpl",
	)
}

func templatesGoPbRpckit_server_methodGoTmpl() (*asset, error) {
	bytes, err := templatesGoPbRpckit_server_methodGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go-pb/rpckit_server_method.go.tmpl", size: 626, mode: os.FileMode(436), modTime: time.Unix(1538743844, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/go-pb/rpckit.go.tmpl": templatesGoPbRpckitGoTmpl,
	"templates/go-pb/rpckit_boilerplate.go.tmpl": templatesGoPbRpckit_boilerplateGoTmpl,
	"templates/go-pb/rpckit_client_definition.go.tmpl": templatesGoPbRpckit_client_definitionGoTmpl,
	"templates/go-pb/rpckit_client_method.go.tmpl": templatesGoPbRpckit_client_methodGoTmpl,
	"templates/go-pb/rpckit_property_to_wiretype.go.tmpl": templatesGoPbRpckit_property_to_wiretypeGoTmpl,
	"templates/go-pb/rpckit_rpccall.go.tmpl": templatesGoPbRpckit_rpccallGoTmpl,
	"templates/go-pb/rpckit_serialization.go.tmpl": templatesGoPbRpckit_serializationGoTmpl,
	"templates/go-pb/rpckit_server_method.go.tmpl": templatesGoPbRpckit_server_methodGoTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"go-pb": &bintree{nil, map[string]*bintree{
			"rpckit.go.tmpl": &bintree{templatesGoPbRpckitGoTmpl, map[string]*bintree{}},
			"rpckit_boilerplate.go.tmpl": &bintree{templatesGoPbRpckit_boilerplateGoTmpl, map[string]*bintree{}},
			"rpckit_client_definition.go.tmpl": &bintree{templatesGoPbRpckit_client_definitionGoTmpl, map[string]*bintree{}},
			"rpckit_client_method.go.tmpl": &bintree{templatesGoPbRpckit_client_methodGoTmpl, map[string]*bintree{}},
			"rpckit_property_to_wiretype.go.tmpl": &bintree{templatesGoPbRpckit_property_to_wiretypeGoTmpl, map[string]*bintree{}},
			"rpckit_rpccall.go.tmpl": &bintree{templatesGoPbRpckit_rpccallGoTmpl, map[string]*bintree{}},
			"rpckit_serialization.go.tmpl": &bintree{templatesGoPbRpckit_serializationGoTmpl, map[string]*bintree{}},
			"rpckit_server_method.go.tmpl": &bintree{templatesGoPbRpckit_server_methodGoTmpl, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

