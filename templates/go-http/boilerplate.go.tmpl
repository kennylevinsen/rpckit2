package {{ .PackageName }}

import (
    "bytes"
    "context"
    "encoding/json"
    "io"
    "io/ioutil"
    "net/http"
    "net/http/cookiejar"

    "golang.org/x/net/publicsuffix"
)

type HTTPClient struct {
    client *http.Client
    baseURL string
}

func NewHTTPClient(baseURL string) (*HTTPClient, error) {
    jar, err := cookiejar.New(&cookiejar.Options{PublicSuffixList: publicsuffix.List})
    if err != nil {
        return nil, err
    }
    return &HTTPClient{
        client: &http.Client{
            Transport: http.DefaultClient.Transport,
            Jar: jar,
        },
        baseURL: baseURL,
    }, nil
}

func (c *HTTPClient) NewRequest(method, url string, body io.Reader) (*http.Request, error) {
    return http.NewRequest(method, c.baseURL + "/" + url, body)
}

func (c *HTTPClient) Do(req *http.Request) (*http.Response, error) {
    return c.client.Do(req)
}

type HTTPServer interface {
    RegisterToMux(*http.ServeMux)
}
