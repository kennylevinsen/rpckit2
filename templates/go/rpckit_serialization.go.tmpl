type server{{ capitalize .Prefix }}_{{ .Name }} struct { {{ range .Fields }}
    _{{ .Name }} {{ .T.GoType }}
{{- end }}
}

func (s *server{{ capitalize .Prefix }}_{{ .Name }}) RPCID() uint64 {
    return {{ .ID }}
}

func (s *server{{ capitalize .Prefix }}_{{ .Name }}) RPCEncode(m *message) error { {{ range .Fields }}
    m.WritePB{{ .T.String }}({{ .ID }}, s._{{ .Name }})
    {{- end }}
    return nil
}

func (s *server{{ capitalize .Prefix }}_{{ .Name }}) RPCDecode(m *message) error {
    var (
        err error
        tag uint64
    )
    for err == nil {
        tag, err = m.ReadVarint()
        switch tag { {{ range .Fields }}
        case uint64({{ .ID }} << 3) | uint64(wireTypeForPropertyType(rpckit2.{{ .T.String }})):
            s._{{ .Name }}, err = m.Read{{ .T.String }}()
        {{- end }}
        default:
            if err != io.EOF {
                err = m.ReadPBSkip(tag)
            }
        }
    }
    if err == io.EOF {
        return nil
    }
    return err
}
